Bringing machine 'default' up with 'vmware_fusion' provider...
==> default: Cloning VMware VM: 'nitrous-io/trusty64'. This can take some time...
==> default: Checking if box 'nitrous-io/trusty64' is up to date...
==> default: Verifying vmnet devices are healthy...
==> default: Preparing network adapters...
==> default: Starting the VMware VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 172.16.128.138:22
    default: SSH username: vagrant
    default: SSH auth method: private key
==> default: Machine booted and ready!
==> default: Forwarding ports...
    default: -- 80 => 8080
    default: -- 22 => 2222
==> default: Setting hostname...
==> default: Configuring network adapters within the VM...
==> default: Waiting for HGFS kernel module to load...
==> default: Enabling and configuring shared folders...
    default: -- /Users/cook.424/Sites/sandbox/vagrant-puppet: /vagrant
    default: -- /Users/cook.424/Sites/sandbox/vagrant-puppet/puppet/manifests: /tmp/vagrant-puppet-4/manifests
    default: -- /Users/cook.424/Sites/sandbox/vagrant-puppet/puppet/modules: /tmp/vagrant-puppet-4/modules-0
==> default: Running provisioner: puppet...
==> default: Running Puppet with default.pp...
==> default: stdin: is not a tty
==> default: Info: Loading facts in /tmp/vagrant-puppet-4/modules-0/apt/lib/facter/apt_update_last_success.rb
==> default: Info: Loading facts in /tmp/vagrant-puppet-4/modules-0/apt/lib/facter/apt_updates.rb
==> default: Info: Loading facts in /tmp/vagrant-puppet-4/modules-0/concat/lib/facter/concat_basedir.rb
==> default: Info: Loading facts in /tmp/vagrant-puppet-4/modules-0/rvm/lib/facter/rvm_installed.rb
==> default: Info: Loading facts in /tmp/vagrant-puppet-4/modules-0/rvm/lib/facter/rvm_version.rb
==> default: Info: Loading facts in /tmp/vagrant-puppet-4/modules-0/stdlib/lib/facter/facter_dot_d.rb
==> default: Info: Loading facts in /tmp/vagrant-puppet-4/modules-0/stdlib/lib/facter/pe_version.rb
==> default: Info: Loading facts in /tmp/vagrant-puppet-4/modules-0/stdlib/lib/facter/puppet_vardir.rb
==> default: Info: Loading facts in /tmp/vagrant-puppet-4/modules-0/stdlib/lib/facter/root_home.rb
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/stdlib/manifests/init.pp' in environment production
==> default: Debug: Automatically imported stdlib from stdlib into production
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/stdlib/manifests/stages.pp' in environment production
==> default: Debug: Automatically imported stdlib::stages from stdlib/stages into production
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apt/manifests/init.pp' in environment production
==> default: Debug: Automatically imported apt from apt into production
==> default: Warning: Config file /etc/puppet/hiera.yaml not found, using Hiera defaults
==> default: Debug: hiera(): Hiera YAML backend starting
==> default: Debug: hiera(): Looking up apt::apt_update_frequency in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apt::disable_keys in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apt::proxy_host in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apt::proxy_port in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apt::purge_sources_list in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apt::purge_sources_list_d in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apt::purge_preferences in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apt::purge_preferences_d in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apt::update_timeout in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apt::update_tries in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apt::sources in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apt::fancy_progress in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apt/manifests/params.pp' in environment production
==> default: Debug: Automatically imported apt::params from apt/params into production
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apt/manifests/update.pp' in environment production
==> default: Debug: Automatically imported apt::update from apt/update into production
==> default: Debug: Failed to load library 'selinux' for feature 'selinux'
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/init.pp' in environment production
==> default: Debug: Automatically imported apache from apache into production
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/params.pp' in environment production
==> default: Debug: Automatically imported apache::params from apache/params into production
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/version.pp' in environment production
==> default: Debug: Automatically imported apache::version from apache/version into production
==> default: Debug: hiera(): Looking up apache::apache_name in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::service_name in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::default_mods in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::default_vhost in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::default_confd_files in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::default_ssl_vhost in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::default_ssl_cert in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::default_ssl_key in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::default_ssl_chain in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::default_ssl_ca in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::default_ssl_crl_path in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::default_ssl_crl in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::default_ssl_crl_check in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::ip in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::service_enable in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::service_ensure in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::purge_configs in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::purge_vhost_dir in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::purge_vdir in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::serveradmin in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::sendfile in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::error_documents in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::timeout in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::httpd_dir in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::server_root in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::conf_dir in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::confd_dir in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::vhost_dir in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::vhost_enable_dir in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod_dir in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod_enable_dir in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mpm_module in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::conf_template in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::servername in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::manage_user in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::manage_group in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::user in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::group in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::keepalive in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::keepalive_timeout in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::max_keepalive_requests in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::logroot in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::logroot_mode in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::log_level in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::log_formats in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::ports_file in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::apache_version in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::server_tokens in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::server_signature in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::trace_enable in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::allow_encoded_slashes in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::package_ensure in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/service.pp' in environment production
==> default: Debug: Automatically imported apache::service from apache/service into production
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/concat/manifests/init.pp' in environment production
==> default: Debug: Automatically imported concat from concat into production
==> default: Debug: Scope(Class[Apache]): Retrieving template apache/ports_header.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/ports_header.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/ports_header.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/ports_header.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/ports_header.erb in 0.00 seconds
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/concat/manifests/fragment.pp' in environment production
==> default: Debug: Automatically imported concat::fragment from concat/fragment into production
==> default: Debug: Scope(Class[Apache]): Retrieving template apache/httpd.conf.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/httpd.conf.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/httpd.conf.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/httpd.conf.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/httpd.conf.erb in 0.00 seconds
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/default_mods.pp' in environment production
==> default: Debug: Automatically imported apache::default_mods from apache/default_mods into production
==> default: Debug: hiera(): Looking up apache::default_mods::mods in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::default_mods::apache_version in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/mod.pp' in environment production
==> default: Debug: Automatically imported apache::mod from apache/mod into production
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/mod/reqtimeout.pp' in environment production
==> default: Debug: Automatically imported apache::mod::reqtimeout from apache/mod/reqtimeout into production
==> default: Debug: hiera(): Looking up apache::mod::reqtimeout::timeouts in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: Scope(Class[Apache::Mod::Reqtimeout]): Retrieving template apache/mod/reqtimeout.conf.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/reqtimeout.conf.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/reqtimeout.conf.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/reqtimeout.conf.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/reqtimeout.conf.erb in 0.00 seconds
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/mod/cgid.pp' in environment production
==> default: Debug: Automatically imported apache::mod::cgid from apache/mod/cgid into production
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/mod/worker.pp' in environment production
==> default: Debug: Automatically imported apache::mod::worker from apache/mod/worker into production
==> default: Debug: Scope(Class[Apache::Mod::Cgid]): Retrieving template apache/mod/cgid.conf.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/cgid.conf.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/cgid.conf.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/cgid.conf.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/cgid.conf.erb in 0.00 seconds
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/mod/alias.pp' in environment production
==> default: Debug: Automatically imported apache::mod::alias from apache/mod/alias into production
==> default: Debug: hiera(): Looking up apache::mod::alias::apache_version in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: Scope(Class[Apache::Mod::Alias]): Retrieving template apache/mod/alias.conf.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/alias.conf.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/alias.conf.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/alias.conf.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/alias.conf.erb in 0.00 seconds
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/mod/autoindex.pp' in environment production
==> default: Debug: Automatically imported apache::mod::autoindex from apache/mod/autoindex into production
==> default: Debug: Scope(Class[Apache::Mod::Autoindex]): Retrieving template apache/mod/autoindex.conf.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/autoindex.conf.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/autoindex.conf.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/autoindex.conf.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/autoindex.conf.erb in 0.00 seconds
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/mod/dav.pp' in environment production
==> default: Debug: Automatically imported apache::mod::dav from apache/mod/dav into production
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/mod/dav_fs.pp' in environment production
==> default: Debug: Automatically imported apache::mod::dav_fs from apache/mod/dav_fs into production
==> default: Debug: Scope(Class[Apache::Mod::Dav_fs]): Retrieving template apache/mod/dav_fs.conf.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/dav_fs.conf.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/dav_fs.conf.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/dav_fs.conf.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/dav_fs.conf.erb in 0.00 seconds
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/mod/deflate.pp' in environment production
==> default: Debug: Automatically imported apache::mod::deflate from apache/mod/deflate into production
==> default: Debug: hiera(): Looking up apache::mod::deflate::types in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod::deflate::notes in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: Scope(Class[Apache::Mod::Deflate]): Retrieving template apache/mod/deflate.conf.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/deflate.conf.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/deflate.conf.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/deflate.conf.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/deflate.conf.erb in 0.00 seconds
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/mod/dir.pp' in environment production
==> default: Debug: Automatically imported apache::mod::dir from apache/mod/dir into production
==> default: Debug: hiera(): Looking up apache::mod::dir::dir in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod::dir::indexes in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: Scope(Class[Apache::Mod::Dir]): Retrieving template apache/mod/dir.conf.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/dir.conf.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/dir.conf.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/dir.conf.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/dir.conf.erb in 0.00 seconds
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/mod/mime.pp' in environment production
==> default: Debug: Automatically imported apache::mod::mime from apache/mod/mime into production
==> default: Debug: hiera(): Looking up apache::mod::mime::mime_support_package in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod::mime::mime_types_config in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: Scope(Class[Apache::Mod::Mime]): Retrieving template apache/mod/mime.conf.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/mime.conf.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/mime.conf.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/mime.conf.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/mime.conf.erb in 0.00 seconds
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/mod/negotiation.pp' in environment production
==> default: Debug: Automatically imported apache::mod::negotiation from apache/mod/negotiation into production
==> default: Debug: hiera(): Looking up apache::mod::negotiation::force_language_priority in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod::negotiation::language_priority in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: Scope(Class[Apache::Mod::Negotiation]): Retrieving template apache/mod/negotiation.conf.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/negotiation.conf.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/negotiation.conf.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/negotiation.conf.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/negotiation.conf.erb in 0.00 seconds
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/mod/setenvif.pp' in environment production
==> default: Debug: Automatically imported apache::mod::setenvif from apache/mod/setenvif into production
==> default: Debug: Scope(Class[Apache::Mod::Setenvif]): Retrieving template apache/mod/setenvif.conf.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/setenvif.conf.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/setenvif.conf.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/setenvif.conf.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/setenvif.conf.erb in 0.00 seconds
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/default_confd_files.pp' in environment production
==> default: Debug: Automatically imported apache::default_confd_files from apache/default_confd_files into production
==> default: Debug: hiera(): Looking up apache::mod::worker::startservers in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod::worker::maxclients in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod::worker::minsparethreads in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod::worker::maxsparethreads in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod::worker::threadsperchild in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod::worker::maxrequestsperchild in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod::worker::serverlimit in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod::worker::threadlimit in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod::worker::apache_version in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/mod/event.pp' in environment production
==> default: Debug: Automatically imported apache::mod::event from apache/mod/event into production
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/mod/itk.pp' in environment production
==> default: Debug: Automatically imported apache::mod::itk from apache/mod/itk into production
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/mod/peruser.pp' in environment production
==> default: Debug: Automatically imported apache::mod::peruser from apache/mod/peruser into production
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/mod/prefork.pp' in environment production
==> default: Debug: Automatically imported apache::mod::prefork from apache/mod/prefork into production
==> default: Debug: Scope(Class[Apache::Mod::Worker]): Retrieving template apache/mod/worker.conf.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/worker.conf.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/worker.conf.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/worker.conf.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/worker.conf.erb in 0.00 seconds
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/mpm.pp' in environment production
==> default: Debug: Automatically imported apache::mpm from apache/mpm into production
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/vhost.pp' in environment production
==> default: Debug: Automatically imported apache::vhost from apache/vhost into production
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/rvm/manifests/init.pp' in environment production
==> default: Debug: Automatically imported rvm from rvm into production
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/rvm/manifests/params.pp' in environment production
==> default: Debug: Automatically imported rvm::params from rvm/params into production
==> default: Debug: hiera(): Looking up rvm::install_rvm in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up rvm::install_dependencies in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up rvm::system_users in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up rvm::system_rubies in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up rvm::proxy_url in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: Resource class[rvm::rvmrc] was not determined to be defined
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/rvm/manifests/rvmrc.pp' in environment production
==> default: Debug: Automatically imported rvm::rvmrc from rvm/rvmrc into production
==> default: Debug: hiera(): Looking up rvm::rvmrc::template in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up rvm::rvmrc::umask in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up rvm::rvmrc::max_time_flag in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up rvm::rvmrc::autoupdate_flag in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up rvm::rvmrc::silence_path_mismatch_check_flag in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/rvm/manifests/group.pp' in environment production
==> default: Debug: Automatically imported rvm::group from rvm/group into production
==> default: Debug: Resource group[rvm] was not determined to be defined
==> default: Debug: Scope(Class[Rvm::Rvmrc]): Retrieving template rvm/rvmrc.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/rvm/templates/rvmrc.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/rvm/templates/rvmrc.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/rvm/templates/rvmrc.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/rvm/templates/rvmrc.erb in 0.00 seconds
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/rvm/manifests/system.pp' in environment production
==> default: Debug: Automatically imported rvm::system from rvm/system into production
==> default: Debug: hiera(): Looking up rvm::system::proxy_url in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: Resource package[curl] was not determined to be defined
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/rvm/manifests/system_user.pp' in environment production
==> default: Debug: Automatically imported rvm::system_user from rvm/system_user into production
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/rvm/manifests/passenger/apache.pp' in environment production
==> default: Debug: Automatically imported rvm::passenger::apache from rvm/passenger/apache into production
==> default: Debug: hiera(): Looking up rvm::passenger::apache::rvm_prefix in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up rvm::passenger::apache::mininstances in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up rvm::passenger::apache::maxpoolsize in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up rvm::passenger::apache::poolidletime in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up rvm::passenger::apache::maxinstancesperapp in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up rvm::passenger::apache::spawnmethod in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up rvm::passenger::apache::proxy_url in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up rvm::passenger::apache::install_timeout in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/rvm/manifests/passenger/gem.pp' in environment production
==> default: Debug: Automatically imported rvm::passenger::gem from rvm/passenger/gem into production
==> default: Debug: hiera(): Looking up rvm::passenger::gem::proxy_url in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/dev.pp' in environment production
==> default: Debug: Automatically imported apache::dev from apache/dev into production
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/rvm/manifests/passenger/dependencies.pp' in environment production
==> default: Debug: Automatically imported rvm::passenger::dependencies from rvm/passenger/dependencies into production
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/rvm/manifests/passenger/dependencies/ubuntu.pp' in environment production
==> default: Debug: Automatically imported rvm::passenger::dependencies::ubuntu from rvm/passenger/dependencies/ubuntu into production
==> default: Debug: Resource package[curl] was not determined to be defined
==> default: Debug: Resource package[curl] not created because it already exists
==> default: Debug: Resource package[libcurl4-gnutls-dev] was not determined to be defined
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/mod/passenger.pp' in environment production
==> default: Debug: Automatically imported apache::mod::passenger from apache/mod/passenger into production
==> default: Debug: hiera(): Looking up apache::mod::passenger::passenger_conf_file in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod::passenger::passenger_conf_package_file in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod::passenger::passenger_high_performance in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod::passenger::passenger_max_requests in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod::passenger::passenger_stat_throttle_rate in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod::passenger::rack_autodetect in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod::passenger::rails_autodetect in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod::passenger::passenger_default_ruby in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod::passenger::passenger_use_global_queue in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod::passenger::mod_package in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod::passenger::mod_package_ensure in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod::passenger::mod_lib in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod::passenger::mod_id in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: hiera(): Looking up apache::mod::passenger::mod_path in YAML backend
==> default: Debug: hiera(): Looking for data source common
==> default: Debug: hiera(): Cannot find datafile /var/lib/hiera/common.yaml, skipping
==> default: Debug: Scope(Class[Apache::Mod::Passenger]): Retrieving template apache/mod/passenger.conf.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/passenger.conf.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/passenger.conf.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/passenger.conf.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/passenger.conf.erb in 0.02 seconds
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/concat/manifests/setup.pp' in environment production
==> default: Debug: Automatically imported concat::setup from concat/setup into production
==> default: Debug: Scope(Apache::Mod[authz_host]): Retrieving template apache/mod/load.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Mod[reqtimeout]): Retrieving template apache/mod/load.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Mod[authn_core]): Retrieving template apache/mod/load.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Mod[cgid]): Retrieving template apache/mod/load.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Mod[alias]): Retrieving template apache/mod/load.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.02 seconds
==> default: Debug: Scope(Apache::Mod[autoindex]): Retrieving template apache/mod/load.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Mod[dav]): Retrieving template apache/mod/load.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Mod[dav_fs]): Retrieving template apache/mod/load.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Mod[deflate]): Retrieving template apache/mod/load.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Mod[dir]): Retrieving template apache/mod/load.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Mod[mime]): Retrieving template apache/mod/load.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Mod[negotiation]): Retrieving template apache/mod/load.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Mod[setenvif]): Retrieving template apache/mod/load.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Mod[auth_basic]): Retrieving template apache/mod/load.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Mod[authn_file]): Retrieving template apache/mod/load.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Mod[authz_core]): Retrieving template apache/mod/load.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Mod[filter]): Retrieving template apache/mod/load.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Mod[access_compat]): Retrieving template apache/mod/load.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Mod[authz_groupfile]): Retrieving template apache/mod/load.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Mod[authz_user]): Retrieving template apache/mod/load.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Mod[env]): Retrieving template apache/mod/load.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/listen.pp' in environment production
==> default: Debug: Automatically imported apache::listen from apache/listen into production
==> default: Debug: importing '/tmp/vagrant-puppet-4/modules-0/apache/manifests/namevirtualhost.pp' in environment production
==> default: Debug: Automatically imported apache::namevirtualhost from apache/namevirtualhost into production
==> default: Debug: Scope(Apache::Vhost[default]): Retrieving template apache/vhost/_file_header.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_file_header.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_file_header.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_file_header.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_file_header.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Vhost[default]): Retrieving template apache/vhost/_docroot.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_docroot.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_docroot.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_docroot.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_docroot.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Vhost[default]): Retrieving template apache/vhost/_directories.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_directories.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_directories.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_directories.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_directories.erb in 0.01 seconds
==> default: Debug: Scope(Apache::Vhost[default]): Retrieving template apache/vhost/_logging.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_logging.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_logging.erb in 0.02 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_logging.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_logging.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Vhost[default]): Retrieving template apache/vhost/_serversignature.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_serversignature.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_serversignature.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_serversignature.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_serversignature.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Vhost[default]): Retrieving template apache/vhost/_access_log.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_access_log.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_access_log.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_access_log.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_access_log.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Vhost[default]): Retrieving template apache/vhost/_file_footer.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_file_footer.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_file_footer.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_file_footer.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_file_footer.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Vhost[default-ssl]): Retrieving template apache/vhost/_file_header.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_file_header.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_file_header.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_file_header.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_file_header.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Vhost[default-ssl]): Retrieving template apache/vhost/_docroot.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_docroot.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_docroot.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_docroot.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_docroot.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Vhost[default-ssl]): Retrieving template apache/vhost/_directories.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_directories.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_directories.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_directories.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_directories.erb in 0.01 seconds
==> default: Debug: Scope(Apache::Vhost[default-ssl]): Retrieving template apache/vhost/_logging.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_logging.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_logging.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_logging.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_logging.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Vhost[default-ssl]): Retrieving template apache/vhost/_serversignature.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_serversignature.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_serversignature.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_serversignature.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_serversignature.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Vhost[default-ssl]): Retrieving template apache/vhost/_access_log.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_access_log.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_access_log.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_access_log.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_access_log.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Vhost[default-ssl]): Retrieving template apache/vhost/_ssl.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_ssl.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_ssl.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_ssl.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_ssl.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Vhost[default-ssl]): Retrieving template apache/vhost/_file_footer.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_file_footer.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_file_footer.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_file_footer.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/vhost/_file_footer.erb in 0.00 seconds
==> default: Debug: Resource user[vagrant] was not determined to be defined
==> default: Debug: Resource user[vagrant] not created because it already exists
==> default: Debug: Scope(Apache::Mod[passenger]): Retrieving template apache/mod/load.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/mod/load.erb in 0.00 seconds
==> default: Debug: Scope(Apache::Listen[80]): Retrieving template apache/listen.erb
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/listen.erb]: Bound template variables for /tmp/vagrant-puppet-4/modules-0/apache/templates/listen.erb in 0.00 seconds
==> default: Debug: template[/tmp/vagrant-puppet-4/modules-0/apache/templates/listen.erb]: Interpolated template /tmp/vagrant-puppet-4/modules-0/apache/templates/listen.erb in 0.00 seconds
==> default: Debug: Adding relationship from Stage[runtime] to Stage[setup_infra] with 'before'
==> default: Debug: Adding relationship from Stage[setup_infra] to Stage[deploy_infra] with 'before'
==> default: Debug: Adding relationship from Stage[deploy_infra] to Stage[setup_app] with 'before'
==> default: Debug: Adding relationship from Stage[setup_app] to Stage[deploy_app] with 'before'
==> default: Debug: Adding relationship from Stage[deploy_app] to Stage[deploy] with 'before'
==> default: Debug: Adding relationship from Class[Apache::Mod::Worker] to Class[Apache::Mod::Cgid] with 'before'
==> default: Debug: Adding relationship from Class[Apache::Mod::Dav] to Class[Apache::Mod::Dav_fs] with 'before'
==> default: Debug: Adding relationship from Package[curl] to Exec[system-rvm] with 'before'
==> default: Debug: Adding relationship from Class[Rvm::Passenger::Dependencies] to Exec[passenger-install-apache2-module] with 'before'
==> default: Debug: Adding relationship from Package[libapache2-mod-passenger] to File[passenger.conf] with 'before'
==> default: Debug: Exec[apt_update]: Adding default for path
==> default: Debug: Exec[mkdir /etc/apache2/conf.d]: Adding default for path
==> default: Debug: Exec[mkdir /etc/apache2/mods-available]: Adding default for path
==> default: Debug: Exec[mkdir /etc/apache2/mods-enabled]: Adding default for path
==> default: Debug: Exec[mkdir /etc/apache2/sites-available]: Adding default for path
==> default: Debug: Exec[mkdir /etc/apache2/sites-enabled]: Adding default for path
==> default: Debug: File[/etc/apache2/mods-available/worker.conf]: Adding default for owner
==> default: Debug: File[/etc/apache2/mods-available/worker.conf]: Adding default for group
==> default: Debug: File[/etc/apache2/mods-available/worker.conf]: Adding default for mode
==> default: Debug: File[/var/lib/puppet/concat/bin/concatfragments.sh]: Adding default for backup
==> default: Debug: File[/var/lib/puppet/concat]: Adding default for backup
==> default: Debug: File[/var/lib/puppet/concat/bin]: Adding default for backup
==> default: Debug: File[/var/lib/puppet/concat/_etc_apache2_ports.conf]: Adding default for backup
==> default: Debug: File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments]: Adding default for backup
==> default: Debug: File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments.concat]: Adding default for backup
==> default: Debug: File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments.concat.out]: Adding default for backup
==> default: Debug: Exec[concat_/etc/apache2/ports.conf]: Adding default for user
==> default: Debug: Exec[concat_/etc/apache2/ports.conf]: Adding default for group
==> default: Debug: File[/etc/apache2/mods-available/worker.load]: Adding default for owner
==> default: Debug: File[/etc/apache2/mods-available/worker.load]: Adding default for group
==> default: Debug: File[/etc/apache2/mods-available/worker.load]: Adding default for mode
==> default: Debug: File[/etc/apache2/mods-enabled/worker.conf]: Adding default for owner
==> default: Debug: File[/etc/apache2/mods-enabled/worker.conf]: Adding default for group
==> default: Debug: File[/etc/apache2/mods-enabled/worker.conf]: Adding default for mode
==> default: Debug: File[/etc/apache2/mods-enabled/worker.load]: Adding default for owner
==> default: Debug: File[/etc/apache2/mods-enabled/worker.load]: Adding default for group
==> default: Debug: File[/etc/apache2/mods-enabled/worker.load]: Adding default for mode
==> default: Debug: Exec[rvm-system-user-vagrant]: Adding default for path
==> default: Debug: File[/var/lib/puppet/concat/15-default.conf]: Adding default for backup
==> default: Debug: File[/var/lib/puppet/concat/15-default.conf/fragments]: Adding default for backup
==> default: Debug: File[/var/lib/puppet/concat/15-default.conf/fragments.concat]: Adding default for backup
==> default: Debug: File[/var/lib/puppet/concat/15-default.conf/fragments.concat.out]: Adding default for backup
==> default: Debug: Exec[concat_15-default.conf]: Adding default for user
==> default: Debug: Exec[concat_15-default.conf]: Adding default for group
==> default: Debug: File[/var/lib/puppet/concat/15-default-ssl.conf]: Adding default for backup
==> default: Debug: File[/var/lib/puppet/concat/15-default-ssl.conf/fragments]: Adding default for backup
==> default: Debug: File[/var/lib/puppet/concat/15-default-ssl.conf/fragments.concat]: Adding default for backup
==> default: Debug: File[/var/lib/puppet/concat/15-default-ssl.conf/fragments.concat.out]: Adding default for backup
==> default: Debug: Exec[concat_15-default-ssl.conf]: Adding default for user
==> default: Debug: Exec[concat_15-default-ssl.conf]: Adding default for group
==> default: Notice: Compiled catalog for dev-box.localdomain in environment production in 3.43 seconds
==> default: Debug: Puppet::Type::Package::ProviderPortupgrade: file /usr/local/sbin/portupgrade does not exist
==> default: Debug: Puppet::Type::Package::ProviderFink: file /sw/bin/fink does not exist
==> default: Debug: Puppet::Type::Package::ProviderPkgin: file pkgin does not exist
==> default: Debug: Puppet::Type::Package::ProviderHpux: file /usr/sbin/swinstall does not exist
==> default: Debug: Puppet::Type::Package::ProviderOpenbsd: file pkg_info does not exist
==> default: Debug: Puppet::Type::Package::ProviderPkg: file /usr/bin/pkg does not exist
==> default: Debug: Puppet::Type::Package::ProviderSun: file /usr/bin/pkginfo does not exist
==> default: Debug: Puppet::Type::Package::ProviderAix: file /usr/bin/lslpp does not exist
==> default: Debug: Puppet::Type::Package::ProviderRpm: file rpm does not exist
==> default: Debug: Puppet::Type::Package::ProviderYum: file yum does not exist
==> default: Debug: Puppet::Type::Package::ProviderPacman: file /usr/bin/pacman does not exist
==> default: Debug: Puppet::Type::Package::ProviderNim: file /usr/sbin/nimclient does not exist
==> default: Debug: Puppet::Type::Package::ProviderFreebsd: file /usr/sbin/pkg_info does not exist
==> default: Debug: Puppet::Type::Package::ProviderSunfreeware: file pkg-get does not exist
==> default: Debug: Puppet::Type::Package::ProviderOpkg: file opkg does not exist
==> default: Debug: Puppet::Type::Package::ProviderUp2date: file /usr/sbin/up2date-nox does not exist
==> default: Debug: Puppet::Type::Package::ProviderPorts: file /usr/local/sbin/portupgrade does not exist
==> default: Debug: Puppet::Type::Package::ProviderAptrpm: file rpm does not exist
==> default: Debug: Puppet::Type::Package::ProviderRug: file /usr/bin/rug does not exist
==> default: Debug: Puppet::Type::Package::ProviderPortage: file /usr/bin/emerge does not exist
==> default: Debug: Puppet::Type::Package::ProviderUrpmi: file urpmi does not exist
==> default: Debug: Puppet::Type::Package::ProviderZypper: file /usr/bin/zypper does not exist
==> default: Debug: Puppet::Type::User::ProviderUser_role_add: file roleadd does not exist
==> default: Debug: Puppet::Type::User::ProviderPw: file pw does not exist
==> default: Debug: Puppet::Type::User::ProviderDirectoryservice: file /usr/bin/dsimport does not exist
==> default: Debug: Failed to load library 'ldap' for feature 'ldap'
==> default: Debug: Puppet::Type::User::ProviderLdap: feature ldap is missing
==> default: Debug: /User[www-data]: Provider useradd does not support features libuser; not managing attribute forcelocal
==> default: Debug: Puppet::Type::Group::ProviderPw: file pw does not exist
==> default: Debug: Puppet::Type::Group::ProviderDirectoryservice: file /usr/bin/dscl does not exist
==> default: Debug: Failed to load library 'ldap' for feature 'ldap'
==> default: Debug: Puppet::Type::Group::ProviderLdap: feature ldap is missing
==> default: Debug: /Group[www-data]: Provider groupadd does not support features libuser; not managing attribute forcelocal
==> default: Debug: Puppet::Type::Service::ProviderLaunchd: file /bin/launchctl does not exist
==> default: Debug: Puppet::Type::Service::ProviderRedhat: file /sbin/chkconfig does not exist
==> default: Debug: Puppet::Type::Service::ProviderGentoo: file /sbin/rc-update does not exist
==> default: Debug: Puppet::Type::Service::ProviderDaemontools: file /usr/bin/svc does not exist
==> default: Debug: Puppet::Type::Service::ProviderOpenrc: file /bin/rc-status does not exist
==> default: Debug: Puppet::Type::Service::ProviderRunit: file /usr/bin/sv does not exist
==> default: Debug: Puppet::Type::Service::ProviderSystemd: file systemctl does not exist
==> default: Debug: /User[vagrant]: Provider useradd does not support features libuser; not managing attribute forcelocal
==> default: Debug: /Group[rvm]: Provider groupadd does not support features libuser; not managing attribute forcelocal
==> default: Debug: Puppet::Type::Rvm_system_ruby::ProviderRvm: file /usr/local/rvm/bin/rvm does not exist
==> default: Debug: Puppet::Type::Rvm_system_ruby::ProviderRvm: file /usr/local/rvm/bin/rvm does not exist
==> default: Debug: Puppet::Type::Rvm_gem::ProviderGem: file /usr/local/rvm/bin/rvm does not exist
==> default: Debug: Puppet::Type::Rvm_gem::ProviderGem: file /usr/local/rvm/bin/rvm does not exist
==> default: Debug: Puppet::Type::Rvm_gem::ProviderGem: file /usr/local/rvm/bin/rvm does not exist
==> default: Debug: Puppet::Type::Rvm_gem::ProviderGem: file /usr/local/rvm/bin/rvm does not exist
==> default: Debug: Creating default schedules
==> default: Debug: Using settings: adding file resource 'confdir': 'File[/etc/puppet]{:path=>"/etc/puppet", :ensure=>:directory, :loglevel=>:debug, :links=>:follow, :backup=>false}'
==> default: Debug: /User[puppet]: Provider useradd does not support features libuser; not managing attribute forcelocal
==> default: Debug: /Group[puppet]: Provider groupadd does not support features libuser; not managing attribute forcelocal
==> default: Debug: Using settings: adding file resource 'vardir': 'File[/var/lib/puppet]{:path=>"/var/lib/puppet", :owner=>"puppet", :group=>"puppet", :ensure=>:directory, :loglevel=>:debug, :links=>:follow, :backup=>false}'
==> default: Debug: Using settings: adding file resource 'logdir': 'File[/var/log/puppet]{:path=>"/var/log/puppet", :mode=>"750", :owner=>"puppet", :group=>"puppet", :ensure=>:directory, :loglevel=>:debug, :links=>:follow, :backup=>false}'
==> default: Debug: Using settings: adding file resource 'statedir': 'File[/var/lib/puppet/state]{:path=>"/var/lib/puppet/state", :mode=>"1755", :ensure=>:directory, :loglevel=>:debug, :links=>:follow, :backup=>false}'
==> default: Debug: Using settings: adding file resource 'rundir': 'File[/var/run/puppet]{:path=>"/var/run/puppet", :mode=>"755", :owner=>"puppet", :group=>"puppet", :ensure=>:directory, :loglevel=>:debug, :links=>:follow, :backup=>false}'
==> default: Debug: Using settings: adding file resource 'libdir': 'File[/var/lib/puppet/lib]{:path=>"/var/lib/puppet/lib", :ensure=>:directory, :loglevel=>:debug, :links=>:follow, :backup=>false}'
==> default: Debug: Using settings: adding file resource 'certdir': 'File[/var/lib/puppet/ssl/certs]{:path=>"/var/lib/puppet/ssl/certs", :owner=>"puppet", :ensure=>:directory, :loglevel=>:debug, :links=>:follow, :backup=>false}'
==> default: Debug: Using settings: adding file resource 'ssldir': 'File[/var/lib/puppet/ssl]{:path=>"/var/lib/puppet/ssl", :mode=>"771", :owner=>"puppet", :ensure=>:directory, :loglevel=>:debug, :links=>:follow, :backup=>false}'
==> default: Debug: Using settings: adding file resource 'publickeydir': 'File[/var/lib/puppet/ssl/public_keys]{:path=>"/var/lib/puppet/ssl/public_keys", :owner=>"puppet", :ensure=>:directory, :loglevel=>:debug, :links=>:follow, :backup=>false}'
==> default: Debug: Using settings: adding file resource 'requestdir': 'File[/var/lib/puppet/ssl/certificate_requests]{:path=>"/var/lib/puppet/ssl/certificate_requests", :owner=>"puppet", :ensure=>:directory, :loglevel=>:debug, :links=>:follow, :backup=>false}'
==> default: Debug: Using settings: adding file resource 'privatekeydir': 'File[/var/lib/puppet/ssl/private_keys]{:path=>"/var/lib/puppet/ssl/private_keys", :mode=>"750", :owner=>"puppet", :ensure=>:directory, :loglevel=>:debug, :links=>:follow, :backup=>false}'
==> default: Debug: Using settings: adding file resource 'privatedir': 'File[/var/lib/puppet/ssl/private]{:path=>"/var/lib/puppet/ssl/private", :mode=>"750", :owner=>"puppet", :ensure=>:directory, :loglevel=>:debug, :links=>:follow, :backup=>false}'
==> default: Debug: Using settings: adding file resource 'clientyamldir': 'File[/var/lib/puppet/client_yaml]{:path=>"/var/lib/puppet/client_yaml", :mode=>"750", :ensure=>:directory, :loglevel=>:debug, :links=>:follow, :backup=>false}'
==> default: Debug: Using settings: adding file resource 'client_datadir': 'File[/var/lib/puppet/client_data]{:path=>"/var/lib/puppet/client_data", :mode=>"750", :ensure=>:directory, :loglevel=>:debug, :links=>:follow, :backup=>false}'
==> default: Debug: Using settings: adding file resource 'agent_disabled_lockfile': 'File[/var/lib/puppet/state/agent_disabled.lock]{:path=>"/var/lib/puppet/state/agent_disabled.lock", :ensure=>:file, :loglevel=>:debug, :links=>:follow, :backup=>false}'
==> default: Debug: Using settings: adding file resource 'clientbucketdir': 'File[/var/lib/puppet/clientbucket]{:path=>"/var/lib/puppet/clientbucket", :mode=>"750", :ensure=>:directory, :loglevel=>:debug, :links=>:follow, :backup=>false}'
==> default: Debug: Using settings: adding file resource 'graphdir': 'File[/var/lib/puppet/state/graphs]{:path=>"/var/lib/puppet/state/graphs", :ensure=>:directory, :loglevel=>:debug, :links=>:follow, :backup=>false}'
==> default: Debug: Using settings: adding file resource 'pluginfactdest': 'File[/var/lib/puppet/facts.d]{:path=>"/var/lib/puppet/facts.d", :ensure=>:directory, :loglevel=>:debug, :links=>:follow, :backup=>false}'
==> default: Debug: /File[/var/lib/puppet/state]: Autorequiring File[/var/lib/puppet]
==> default: Debug: /File[/var/lib/puppet/lib]: Autorequiring File[/var/lib/puppet]
==> default: Debug: /File[/var/lib/puppet/ssl/certs]: Autorequiring File[/var/lib/puppet/ssl]
==> default: Debug: /File[/var/lib/puppet/ssl]: Autorequiring File[/var/lib/puppet]
==> default: Debug: /File[/var/lib/puppet/ssl/public_keys]: Autorequiring File[/var/lib/puppet/ssl]
==> default: Debug: /File[/var/lib/puppet/ssl/certificate_requests]: Autorequiring File[/var/lib/puppet/ssl]
==> default: Debug: /File[/var/lib/puppet/ssl/private_keys]: Autorequiring File[/var/lib/puppet/ssl]
==> default: Debug: /File[/var/lib/puppet/ssl/private]: Autorequiring File[/var/lib/puppet/ssl]
==> default: Debug: /File[/var/lib/puppet/client_yaml]: Autorequiring File[/var/lib/puppet]
==> default: Debug: /File[/var/lib/puppet/client_data]: Autorequiring File[/var/lib/puppet]
==> default: Debug: /File[/var/lib/puppet/state/agent_disabled.lock]: Autorequiring File[/var/lib/puppet/state]
==> default: Debug: /File[/var/lib/puppet/clientbucket]: Autorequiring File[/var/lib/puppet]
==> default: Debug: /File[/var/lib/puppet/state/graphs]: Autorequiring File[/var/lib/puppet/state]
==> default: Debug: /File[/var/lib/puppet/facts.d]: Autorequiring File[/var/lib/puppet]
==> default: Debug: Finishing transaction 31127080
==> default: Info: Loading facts in /tmp/vagrant-puppet-4/modules-0/apt/lib/facter/apt_update_last_success.rb
==> default: Info: Loading facts in /tmp/vagrant-puppet-4/modules-0/apt/lib/facter/apt_updates.rb
==> default: Info: Loading facts in /tmp/vagrant-puppet-4/modules-0/concat/lib/facter/concat_basedir.rb
==> default: Info: Loading facts in /tmp/vagrant-puppet-4/modules-0/rvm/lib/facter/rvm_installed.rb
==> default: Info: Loading facts in /tmp/vagrant-puppet-4/modules-0/rvm/lib/facter/rvm_version.rb
==> default: Info: Loading facts in /tmp/vagrant-puppet-4/modules-0/stdlib/lib/facter/facter_dot_d.rb
==> default: Info: Loading facts in /tmp/vagrant-puppet-4/modules-0/stdlib/lib/facter/pe_version.rb
==> default: Info: Loading facts in /tmp/vagrant-puppet-4/modules-0/stdlib/lib/facter/puppet_vardir.rb
==> default: Info: Loading facts in /tmp/vagrant-puppet-4/modules-0/stdlib/lib/facter/root_home.rb
==> default: Debug: Executing '/etc/puppet/etckeeper-commit-pre'
==> default: Debug: /Stage[setup]/before: requires Stage[main]
==> default: Debug: /Stage[runtime]/require: requires Stage[main]
==> default: Debug: /Stage[runtime]/before: requires Stage[setup_infra]
==> default: Debug: /Stage[setup_infra]/before: requires Stage[deploy_infra]
==> default: Debug: /Stage[deploy_infra]/before: requires Stage[setup_app]
==> default: Debug: /Stage[setup_app]/before: requires Stage[deploy_app]
==> default: Debug: /Stage[deploy_app]/before: requires Stage[deploy]
==> default: Debug: /Stage[main]/Apt/File[sources.list]/notify: subscribes to Exec[apt_update]
==> default: Debug: /Stage[main]/Apt/File[sources.list.d]/notify: subscribes to Exec[apt_update]
==> default: Debug: /Stage[main]/Apt/File[01proxy]/notify: subscribes to Exec[apt_update]
==> default: Debug: /Stage[main]/Apt/File[old-proxy-file]/notify: subscribes to Exec[apt_update]
==> default: Debug: /Stage[main]/Apt/Anchor[apt::update]/require: requires Class[Apt::Update]
==> default: Debug: /Stage[main]/Main/Package[python-software-properties]/require: requires Class[Apt]
==> default: Debug: /Stage[main]/Main/Package[build-essential]/require: requires Class[Apt]
==> default: Debug: /Stage[main]/Main/Package[git]/require: requires Class[Apt]
==> default: Debug: /Stage[main]/Main/Package[vim]/require: requires Class[Apt]
==> default: Debug: /Stage[main]/Main/Package[libxml2]/require: requires Class[Apt]
==> default: Debug: /Stage[main]/Main/Package[libxml2-dev]/require: requires Class[Apt]
==> default: Debug: /Stage[main]/Main/Package[libxslt1-dev]/require: requires Class[Apt]
==> default: Debug: /Stage[main]/Main/Package[nodejs]/require: requires Class[Apt]
==> default: Debug: /Stage[main]/Apache/require: requires Class[Apt]
==> default: Debug: /Stage[main]/Apache/Package[httpd]/notify: subscribes to Class[Apache::Service]
==> default: Debug: /Stage[main]/Apache/User[www-data]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache/Group[www-data]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache/Exec[mkdir /etc/apache2/conf.d]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/conf.d]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/conf.d]/notify: subscribes to Class[Apache::Service]
==> default: Debug: /Stage[main]/Apache/Exec[mkdir /etc/apache2/mods-available]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/mods-available]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/mods-available]/notify: subscribes to Class[Apache::Service]
==> default: Debug: /Stage[main]/Apache/Exec[mkdir /etc/apache2/mods-enabled]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/mods-enabled]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/mods-enabled]/notify: subscribes to Class[Apache::Service]
==> default: Debug: /Stage[main]/Apache/Exec[mkdir /etc/apache2/sites-available]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/sites-available]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/sites-available]/notify: subscribes to Class[Apache::Service]
==> default: Debug: /Stage[main]/Apache/Exec[mkdir /etc/apache2/sites-enabled]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/sites-enabled]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/sites-enabled]/notify: subscribes to Class[Apache::Service]
==> default: Debug: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/notify: subscribes to Class[Apache::Service]
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/apache2.conf]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/apache2.conf]/notify: subscribes to Class[Apache::Service]
==> default: Debug: /Stage[main]/Apache::Mod::Reqtimeout/File[reqtimeout.conf]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Reqtimeout/File[reqtimeout.conf]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Reqtimeout/File[reqtimeout.conf]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Cgid/File[cgid.conf]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Cgid/File[cgid.conf]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Cgid/File[cgid.conf]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Alias/File[alias.conf]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Alias/File[alias.conf]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Alias/File[alias.conf]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/File[autoindex.conf]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/File[autoindex.conf]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/File[autoindex.conf]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Dav/before: requires Class[Apache::Mod::Dav_fs]
==> default: Debug: /Stage[main]/Apache::Mod::Dav_fs/File[dav_fs.conf]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Dav_fs/File[dav_fs.conf]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Dav_fs/File[dav_fs.conf]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/File[deflate.conf]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/File[deflate.conf]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/File[deflate.conf]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Dir/File[dir.conf]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Dir/File[dir.conf]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Dir/File[dir.conf]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Mime/File[mime.conf]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Mime/File[mime.conf]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Mime/File[mime.conf]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Mime/Package[mime-support]/before: requires File[mime.conf]
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/File[negotiation.conf]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/File[negotiation.conf]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/File[negotiation.conf]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/File[setenvif.conf]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/File[setenvif.conf]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/File[setenvif.conf]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Worker/before: requires Class[Apache::Mod::Cgid]
==> default: Debug: /Stage[main]/Apache::Mod::Worker/File[/etc/apache2/mods-available/worker.conf]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Worker/File[/etc/apache2/mods-available/worker.conf]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Worker/File[/etc/apache2/mods-available/worker.conf]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Rvm/require: requires Class[Apache]
==> default: Debug: /Stage[main]/Rvm::Rvmrc/File[/etc/rvmrc]/before: requires Exec[system-rvm]
==> default: Debug: /Stage[main]/Rvm::System/Package[curl]/before: requires Exec[system-rvm]
==> default: Debug: /Stage[main]/Main/Rvm_system_ruby[ruby-2.1.4]/require: requires Class[Rvm::System]
==> default: Debug: /Stage[main]/Main/Rvm_gem[ruby-2.1.4/bundler]/require: requires Rvm_system_ruby[ruby-2.1.4]
==> default: Debug: /Stage[main]/Rvm::Passenger::Apache/require: requires Rvm_system_ruby[ruby-2.1.4]
==> default: Debug: /Stage[main]/Rvm::Passenger::Gem/Rvm_gem[passenger]/require: requires Rvm_system_ruby[ruby-2.1.4]
==> default: Debug: /Stage[main]/Apache::Dev/Package[libaprutil1-dev]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Dev/Package[libapr1-dev]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Dev/Package[apache2-prefork-dev]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Rvm::Passenger::Dependencies/require: requires Class[Rvm::Passenger::Dependencies::Ubuntu]
==> default: Debug: /Stage[main]/Rvm::Passenger::Dependencies/before: requires Exec[passenger-install-apache2-module]
==> default: Debug: /Stage[main]/Rvm::Passenger::Apache/Exec[passenger-install-apache2-module]/require: requires Class[Rvm::Passenger::Gem]
==> default: Debug: /Stage[main]/Rvm::Passenger::Apache/Exec[passenger-install-apache2-module]/require: requires Class[Apache::Dev]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/require: requires Exec[passenger-install-apache2-module]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/subscribe: subscribes to Exec[passenger-install-apache2-module]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/File[passenger.conf]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/File[passenger.conf]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/File[passenger.conf]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Rvm::Passenger::Apache/Exec[copy passenger_extra.conf to passenger.conf]/require: requires Class[Apache::Mod::Passenger]
==> default: Debug: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments]/notify: subscribes to Exec[concat_/etc/apache2/ports.conf]
==> default: Debug: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/Exec[concat_/etc/apache2/ports.conf]/require: requires File[/var/lib/puppet/concat/_etc_apache2_ports.conf]
==> default: Debug: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/Exec[concat_/etc/apache2/ports.conf]/require: requires File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments]
==> default: Debug: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/Exec[concat_/etc/apache2/ports.conf]/require: requires File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments.concat]
==> default: Debug: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/Exec[concat_/etc/apache2/ports.conf]/subscribe: subscribes to File[/var/lib/puppet/concat/_etc_apache2_ports.conf]
==> default: Debug: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/Exec[concat_/etc/apache2/ports.conf]/notify: subscribes to File[/etc/apache2/ports.conf]
==> default: Debug: /Stage[main]/Apache/Concat::Fragment[Apache ports header]/File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments/10_Apache ports header]/notify: subscribes to Exec[concat_/etc/apache2/ports.conf]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_host]/File[authz_host.load]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_host]/File[authz_host.load]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_host]/File[authz_host.load]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_host]/File[authz_host.load]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_host]/File[authz_host.load symlink]/require: requires File[authz_host.load]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_host]/File[authz_host.load symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_host]/File[authz_host.load symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_host]/File[authz_host.load symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Reqtimeout/Apache::Mod[reqtimeout]/File[reqtimeout.load]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Reqtimeout/Apache::Mod[reqtimeout]/File[reqtimeout.load]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Reqtimeout/Apache::Mod[reqtimeout]/File[reqtimeout.load]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Reqtimeout/Apache::Mod[reqtimeout]/File[reqtimeout.load]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Reqtimeout/Apache::Mod[reqtimeout]/File[reqtimeout.load symlink]/require: requires File[reqtimeout.load]
==> default: Debug: /Stage[main]/Apache::Mod::Reqtimeout/Apache::Mod[reqtimeout]/File[reqtimeout.load symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Reqtimeout/Apache::Mod[reqtimeout]/File[reqtimeout.load symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Reqtimeout/Apache::Mod[reqtimeout]/File[reqtimeout.load symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Reqtimeout/Apache::Mod[reqtimeout]/File[reqtimeout.conf symlink]/require: requires File[reqtimeout.conf]
==> default: Debug: /Stage[main]/Apache::Mod::Reqtimeout/Apache::Mod[reqtimeout]/File[reqtimeout.conf symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Reqtimeout/Apache::Mod[reqtimeout]/File[reqtimeout.conf symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Reqtimeout/Apache::Mod[reqtimeout]/File[reqtimeout.conf symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_core]/File[authn_core.load]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_core]/File[authn_core.load]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_core]/File[authn_core.load]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_core]/File[authn_core.load]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_core]/File[authn_core.load symlink]/require: requires File[authn_core.load]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_core]/File[authn_core.load symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_core]/File[authn_core.load symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_core]/File[authn_core.load symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Cgid/Apache::Mod[cgid]/File[cgid.load]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Cgid/Apache::Mod[cgid]/File[cgid.load]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Cgid/Apache::Mod[cgid]/File[cgid.load]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Cgid/Apache::Mod[cgid]/File[cgid.load]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Cgid/Apache::Mod[cgid]/File[cgid.load symlink]/require: requires File[cgid.load]
==> default: Debug: /Stage[main]/Apache::Mod::Cgid/Apache::Mod[cgid]/File[cgid.load symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Cgid/Apache::Mod[cgid]/File[cgid.load symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Cgid/Apache::Mod[cgid]/File[cgid.load symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Cgid/Apache::Mod[cgid]/File[cgid.conf symlink]/require: requires File[cgid.conf]
==> default: Debug: /Stage[main]/Apache::Mod::Cgid/Apache::Mod[cgid]/File[cgid.conf symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Cgid/Apache::Mod[cgid]/File[cgid.conf symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Cgid/Apache::Mod[cgid]/File[cgid.conf symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.load]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.load]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.load]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.load]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.load symlink]/require: requires File[alias.load]
==> default: Debug: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.load symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.load symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.load symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.conf symlink]/require: requires File[alias.conf]
==> default: Debug: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.conf symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.conf symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.conf symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.load]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.load]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.load]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.load]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.load symlink]/require: requires File[autoindex.load]
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.load symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.load symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.load symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.conf symlink]/require: requires File[autoindex.conf]
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.conf symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.conf symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.conf symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Dav/Apache::Mod[dav]/File[dav.load]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Dav/Apache::Mod[dav]/File[dav.load]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Dav/Apache::Mod[dav]/File[dav.load]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Dav/Apache::Mod[dav]/File[dav.load]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Dav/Apache::Mod[dav]/File[dav.load symlink]/require: requires File[dav.load]
==> default: Debug: /Stage[main]/Apache::Mod::Dav/Apache::Mod[dav]/File[dav.load symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Dav/Apache::Mod[dav]/File[dav.load symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Dav/Apache::Mod[dav]/File[dav.load symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.load]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.load]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.load]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.load]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.load symlink]/require: requires File[dav_fs.load]
==> default: Debug: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.load symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.load symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.load symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.conf symlink]/require: requires File[dav_fs.conf]
==> default: Debug: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.conf symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.conf symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.conf symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.load]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.load]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.load]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.load]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.load symlink]/require: requires File[deflate.load]
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.load symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.load symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.load symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.conf symlink]/require: requires File[deflate.conf]
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.conf symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.conf symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.conf symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.load]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.load]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.load]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.load]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.load symlink]/require: requires File[dir.load]
==> default: Debug: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.load symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.load symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.load symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.conf symlink]/require: requires File[dir.conf]
==> default: Debug: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.conf symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.conf symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.conf symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.load]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.load]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.load]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.load]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.load symlink]/require: requires File[mime.load]
==> default: Debug: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.load symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.load symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.load symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.conf symlink]/require: requires File[mime.conf]
==> default: Debug: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.conf symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.conf symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.conf symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.load]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.load]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.load]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.load]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.load symlink]/require: requires File[negotiation.load]
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.load symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.load symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.load symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.conf symlink]/require: requires File[negotiation.conf]
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.conf symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.conf symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.conf symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.load]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.load]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.load]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.load]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.load symlink]/require: requires File[setenvif.load]
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.load symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.load symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.load symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.conf symlink]/require: requires File[setenvif.conf]
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.conf symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.conf symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.conf symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[auth_basic]/File[auth_basic.load]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[auth_basic]/File[auth_basic.load]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[auth_basic]/File[auth_basic.load]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[auth_basic]/File[auth_basic.load]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[auth_basic]/File[auth_basic.load symlink]/require: requires File[auth_basic.load]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[auth_basic]/File[auth_basic.load symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[auth_basic]/File[auth_basic.load symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[auth_basic]/File[auth_basic.load symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_file]/File[authn_file.load]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_file]/File[authn_file.load]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_file]/File[authn_file.load]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_file]/File[authn_file.load]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_file]/File[authn_file.load symlink]/require: requires File[authn_file.load]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_file]/File[authn_file.load symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_file]/File[authn_file.load symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_file]/File[authn_file.load symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_core]/File[authz_core.load]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_core]/File[authz_core.load]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_core]/File[authz_core.load]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_core]/File[authz_core.load]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_core]/File[authz_core.load symlink]/require: requires File[authz_core.load]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_core]/File[authz_core.load symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_core]/File[authz_core.load symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_core]/File[authz_core.load symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[filter]/File[filter.load]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[filter]/File[filter.load]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[filter]/File[filter.load]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[filter]/File[filter.load]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[filter]/File[filter.load symlink]/require: requires File[filter.load]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[filter]/File[filter.load symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[filter]/File[filter.load symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[filter]/File[filter.load symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[access_compat]/File[access_compat.load]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[access_compat]/File[access_compat.load]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[access_compat]/File[access_compat.load]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[access_compat]/File[access_compat.load]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[access_compat]/File[access_compat.load symlink]/require: requires File[access_compat.load]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[access_compat]/File[access_compat.load symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[access_compat]/File[access_compat.load symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[access_compat]/File[access_compat.load symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_groupfile]/File[authz_groupfile.load]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_groupfile]/File[authz_groupfile.load]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_groupfile]/File[authz_groupfile.load]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_groupfile]/File[authz_groupfile.load]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_groupfile]/File[authz_groupfile.load symlink]/require: requires File[authz_groupfile.load]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_groupfile]/File[authz_groupfile.load symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_groupfile]/File[authz_groupfile.load symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_groupfile]/File[authz_groupfile.load symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_user]/File[authz_user.load]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_user]/File[authz_user.load]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_user]/File[authz_user.load]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_user]/File[authz_user.load]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_user]/File[authz_user.load symlink]/require: requires File[authz_user.load]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_user]/File[authz_user.load symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_user]/File[authz_user.load symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_user]/File[authz_user.load symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[env]/File[env.load]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[env]/File[env.load]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[env]/File[env.load]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[env]/File[env.load]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[env]/File[env.load symlink]/require: requires File[env.load]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[env]/File[env.load symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[env]/File[env.load symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[env]/File[env.load symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-available/worker.load]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-available/worker.load]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-available/worker.load]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-available/worker.load]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-enabled/worker.conf]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-enabled/worker.conf]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-enabled/worker.conf]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-enabled/worker.load]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-enabled/worker.load]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-enabled/worker.load]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/File[/var/www]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/File[/var/www]/before: requires Concat[15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/File[/var/log/apache2]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/File[/var/log/apache2]/before: requires Concat[15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/File[15-default.conf symlink]/require: requires Concat[15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/File[15-default.conf symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat[15-default-ssl.conf]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat[15-default-ssl.conf]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/File[15-default-ssl.conf symlink]/require: requires Concat[15-default-ssl.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/File[15-default-ssl.conf symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Main/Rvm::System_user[vagrant]/Exec[rvm-system-user-vagrant]/require: requires User[vagrant]
==> default: Debug: /Stage[main]/Main/Rvm::System_user[vagrant]/Exec[rvm-system-user-vagrant]/require: requires Group[rvm]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/Package[libapache2-mod-passenger]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/Package[libapache2-mod-passenger]/before: requires File[passenger.load]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/Package[libapache2-mod-passenger]/before: requires File[passenger.conf]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.load]/require: requires Package[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.load]/require: requires Exec[mkdir /etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.load]/before: requires File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.load]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.load symlink]/require: requires File[passenger.load]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.load symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.load symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.load symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.conf symlink]/require: requires File[passenger.conf]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.conf symlink]/require: requires Exec[mkdir /etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.conf symlink]/before: requires File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.conf symlink]/notify: subscribes to Service[httpd]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/File[/var/lib/puppet/concat/15-default.conf/fragments]/notify: subscribes to Exec[concat_15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/Exec[concat_15-default.conf]/require: requires File[/var/lib/puppet/concat/15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/Exec[concat_15-default.conf]/require: requires File[/var/lib/puppet/concat/15-default.conf/fragments]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/Exec[concat_15-default.conf]/require: requires File[/var/lib/puppet/concat/15-default.conf/fragments.concat]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/Exec[concat_15-default.conf]/subscribe: subscribes to File[/var/lib/puppet/concat/15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/Exec[concat_15-default.conf]/notify: subscribes to File[15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-apache-header]/File[/var/lib/puppet/concat/15-default.conf/fragments/0_default-apache-header]/notify: subscribes to Exec[concat_15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-docroot]/File[/var/lib/puppet/concat/15-default.conf/fragments/10_default-docroot]/notify: subscribes to Exec[concat_15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-directories]/File[/var/lib/puppet/concat/15-default.conf/fragments/50_default-directories]/notify: subscribes to Exec[concat_15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-logging]/File[/var/lib/puppet/concat/15-default.conf/fragments/70_default-logging]/notify: subscribes to Exec[concat_15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-serversignature]/File[/var/lib/puppet/concat/15-default.conf/fragments/80_default-serversignature]/notify: subscribes to Exec[concat_15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-access_log]/File[/var/lib/puppet/concat/15-default.conf/fragments/90_default-access_log]/notify: subscribes to Exec[concat_15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-file_footer]/File[/var/lib/puppet/concat/15-default.conf/fragments/999_default-file_footer]/notify: subscribes to Exec[concat_15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat::Fragment[default-ssl-apache-header]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments/0_default-ssl-apache-header]/notify: subscribes to Exec[concat_15-default-ssl.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat::Fragment[default-ssl-docroot]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments/10_default-ssl-docroot]/notify: subscribes to Exec[concat_15-default-ssl.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat::Fragment[default-ssl-directories]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments/50_default-ssl-directories]/notify: subscribes to Exec[concat_15-default-ssl.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat::Fragment[default-ssl-logging]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments/70_default-ssl-logging]/notify: subscribes to Exec[concat_15-default-ssl.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat::Fragment[default-ssl-serversignature]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments/80_default-ssl-serversignature]/notify: subscribes to Exec[concat_15-default-ssl.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat::Fragment[default-ssl-access_log]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments/90_default-ssl-access_log]/notify: subscribes to Exec[concat_15-default-ssl.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat::Fragment[default-ssl-ssl]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments/200_default-ssl-ssl]/notify: subscribes to Exec[concat_15-default-ssl.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat::Fragment[default-ssl-file_footer]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments/999_default-ssl-file_footer]/notify: subscribes to Exec[concat_15-default-ssl.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Apache::Listen[80]/Concat::Fragment[Listen 80]/File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments/10_Listen 80]/notify: subscribes to Exec[concat_/etc/apache2/ports.conf]
==> default: Debug: /User[www-data]: Autorequiring Group[www-data]
==> default: Debug: /Stage[main]/Apache::Mod::Reqtimeout/File[reqtimeout.conf]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Cgid/File[cgid.conf]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Alias/File[alias.conf]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/File[autoindex.conf]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Dav_fs/File[dav_fs.conf]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/File[deflate.conf]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Dir/File[dir.conf]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Mime/File[mime.conf]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/File[negotiation.conf]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/File[setenvif.conf]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Worker/File[/etc/apache2/mods-available/worker.conf]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Rvm::Rvmrc/File[/etc/rvmrc]: Autorequiring Group[rvm]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/File[passenger_package.conf]: Autorequiring File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/File[passenger.conf]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Concat::Setup/File[/var/lib/puppet/concat/bin/concatfragments.sh]: Autorequiring File[/var/lib/puppet/concat/bin]
==> default: Debug: /Stage[main]/Concat::Setup/File[/var/lib/puppet/concat/bin]: Autorequiring File[/var/lib/puppet/concat]
==> default: Debug: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/File[/var/lib/puppet/concat/_etc_apache2_ports.conf]: Autorequiring File[/var/lib/puppet/concat]
==> default: Debug: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments]: Autorequiring File[/var/lib/puppet/concat/_etc_apache2_ports.conf]
==> default: Debug: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments.concat]: Autorequiring File[/var/lib/puppet/concat/_etc_apache2_ports.conf]
==> default: Debug: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments.concat.out]: Autorequiring File[/var/lib/puppet/concat/_etc_apache2_ports.conf]
==> default: Debug: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/Exec[concat_/etc/apache2/ports.conf]: Autorequiring File[/var/lib/puppet/concat/bin/concatfragments.sh]
==> default: Debug: /Stage[main]/Apache/Concat::Fragment[Apache ports header]/File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments/10_Apache ports header]: Autorequiring File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_host]/File[authz_host.load]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_host]/File[authz_host.load symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Reqtimeout/Apache::Mod[reqtimeout]/File[reqtimeout.load]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Reqtimeout/Apache::Mod[reqtimeout]/File[reqtimeout.load symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Reqtimeout/Apache::Mod[reqtimeout]/File[reqtimeout.conf symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_core]/File[authn_core.load]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_core]/File[authn_core.load symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Cgid/Apache::Mod[cgid]/File[cgid.load]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Cgid/Apache::Mod[cgid]/File[cgid.load symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Cgid/Apache::Mod[cgid]/File[cgid.conf symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.load]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.load symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.conf symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.load]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.load symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.conf symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Dav/Apache::Mod[dav]/File[dav.load]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Dav/Apache::Mod[dav]/File[dav.load symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.load]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.load symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.conf symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.load]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.load symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.conf symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.load]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.load symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.conf symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.load]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.load symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.conf symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.load]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.load symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.conf symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.load]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.load symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.conf symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[auth_basic]/File[auth_basic.load]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[auth_basic]/File[auth_basic.load symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_file]/File[authn_file.load]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_file]/File[authn_file.load symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_core]/File[authz_core.load]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_core]/File[authz_core.load symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[filter]/File[filter.load]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[filter]/File[filter.load symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[access_compat]/File[access_compat.load]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[access_compat]/File[access_compat.load symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_groupfile]/File[authz_groupfile.load]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_groupfile]/File[authz_groupfile.load symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_user]/File[authz_user.load]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_user]/File[authz_user.load symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[env]/File[env.load]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[env]/File[env.load symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-available/worker.load]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-enabled/worker.conf]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-enabled/worker.conf]: Autorequiring File[/etc/apache2/mods-available/worker.conf]
==> default: Debug: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-enabled/worker.load]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-enabled/worker.load]: Autorequiring File[/etc/apache2/mods-available/worker.load]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/File[15-default.conf symlink]: Autorequiring File[/etc/apache2/sites-enabled]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/File[15-default.conf symlink]: Autorequiring File[15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/File[15-default-ssl.conf symlink]: Autorequiring File[/etc/apache2/sites-enabled]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/File[15-default-ssl.conf symlink]: Autorequiring File[/etc/apache2/sites-available/15-default-ssl.conf]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.load]: Skipping automatic relationship with File[/etc/apache2/mods-available]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.load symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.conf symlink]: Skipping automatic relationship with File[/etc/apache2/mods-enabled]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/File[/var/lib/puppet/concat/15-default.conf]: Autorequiring File[/var/lib/puppet/concat]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/File[/var/lib/puppet/concat/15-default.conf/fragments]: Autorequiring File[/var/lib/puppet/concat/15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/File[/var/lib/puppet/concat/15-default.conf/fragments.concat]: Autorequiring File[/var/lib/puppet/concat/15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/File[/var/lib/puppet/concat/15-default.conf/fragments.concat.out]: Autorequiring File[/var/lib/puppet/concat/15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/File[15-default.conf]: Autorequiring File[/etc/apache2/sites-available]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/Exec[concat_15-default.conf]: Autorequiring File[/var/lib/puppet/concat/bin/concatfragments.sh]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-apache-header]/File[/var/lib/puppet/concat/15-default.conf/fragments/0_default-apache-header]: Autorequiring File[/var/lib/puppet/concat/15-default.conf/fragments]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-docroot]/File[/var/lib/puppet/concat/15-default.conf/fragments/10_default-docroot]: Autorequiring File[/var/lib/puppet/concat/15-default.conf/fragments]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-directories]/File[/var/lib/puppet/concat/15-default.conf/fragments/50_default-directories]: Autorequiring File[/var/lib/puppet/concat/15-default.conf/fragments]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-logging]/File[/var/lib/puppet/concat/15-default.conf/fragments/70_default-logging]: Autorequiring File[/var/lib/puppet/concat/15-default.conf/fragments]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-serversignature]/File[/var/lib/puppet/concat/15-default.conf/fragments/80_default-serversignature]: Autorequiring File[/var/lib/puppet/concat/15-default.conf/fragments]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-access_log]/File[/var/lib/puppet/concat/15-default.conf/fragments/90_default-access_log]: Autorequiring File[/var/lib/puppet/concat/15-default.conf/fragments]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-file_footer]/File[/var/lib/puppet/concat/15-default.conf/fragments/999_default-file_footer]: Autorequiring File[/var/lib/puppet/concat/15-default.conf/fragments]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat[15-default-ssl.conf]/File[/var/lib/puppet/concat/15-default-ssl.conf]: Autorequiring File[/var/lib/puppet/concat]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat[15-default-ssl.conf]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments]: Autorequiring File[/var/lib/puppet/concat/15-default-ssl.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat[15-default-ssl.conf]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments.concat]: Autorequiring File[/var/lib/puppet/concat/15-default-ssl.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat[15-default-ssl.conf]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments.concat.out]: Autorequiring File[/var/lib/puppet/concat/15-default-ssl.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat[15-default-ssl.conf]/File[/etc/apache2/sites-available/15-default-ssl.conf]: Autorequiring File[/etc/apache2/sites-available]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat::Fragment[default-ssl-apache-header]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments/0_default-ssl-apache-header]: Autorequiring File[/var/lib/puppet/concat/15-default-ssl.conf/fragments]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat::Fragment[default-ssl-docroot]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments/10_default-ssl-docroot]: Autorequiring File[/var/lib/puppet/concat/15-default-ssl.conf/fragments]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat::Fragment[default-ssl-directories]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments/50_default-ssl-directories]: Autorequiring File[/var/lib/puppet/concat/15-default-ssl.conf/fragments]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat::Fragment[default-ssl-logging]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments/70_default-ssl-logging]: Autorequiring File[/var/lib/puppet/concat/15-default-ssl.conf/fragments]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat::Fragment[default-ssl-serversignature]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments/80_default-ssl-serversignature]: Autorequiring File[/var/lib/puppet/concat/15-default-ssl.conf/fragments]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat::Fragment[default-ssl-access_log]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments/90_default-ssl-access_log]: Autorequiring File[/var/lib/puppet/concat/15-default-ssl.conf/fragments]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat::Fragment[default-ssl-ssl]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments/200_default-ssl-ssl]: Autorequiring File[/var/lib/puppet/concat/15-default-ssl.conf/fragments]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat::Fragment[default-ssl-file_footer]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments/999_default-ssl-file_footer]: Autorequiring File[/var/lib/puppet/concat/15-default-ssl.conf/fragments]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Apache::Listen[80]/Concat::Fragment[Listen 80]/File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments/10_Listen 80]: Autorequiring File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments]
==> default: Info: Applying configuration version '1415369268'
==> default: Notice: /Stage[main]/Concat::Setup/File[/var/lib/puppet/concat]/ensure: created
==> default: Debug: /Stage[main]/Concat::Setup/File[/var/lib/puppet/concat]: The container Class[Concat::Setup] will propagate my refresh event
==> default: Notice: /Stage[main]/Concat::Setup/File[/var/lib/puppet/concat/bin]/ensure: created
==> default: Debug: /Stage[main]/Concat::Setup/File[/var/lib/puppet/concat/bin]: The container Class[Concat::Setup] will propagate my refresh event
==> default: Notice: /Stage[main]/Concat::Setup/File[/var/lib/puppet/concat/bin/concatfragments.sh]/ensure: defined content as '{md5}7bbe7c5fce25a5ddd20415d909ba44fc'
==> default: Debug: /Stage[main]/Concat::Setup/File[/var/lib/puppet/concat/bin/concatfragments.sh]: The container Class[Concat::Setup] will propagate my refresh event
==> default: Debug: Class[Concat::Setup]: The container Stage[main] will propagate my refresh event
==> default: Debug: Executing '/usr/sbin/groupadd rvm'
==> default: Notice: /Stage[main]/Rvm::Group/Group[rvm]/ensure: created
==> default: Debug: /Group[rvm]: The container Class[Rvm::Group] will propagate my refresh event
==> default: Debug: Class[Rvm::Group]: The container Stage[main] will propagate my refresh event
==> default: Notice: /Stage[main]/Rvm::Rvmrc/File[/etc/rvmrc]/ensure: defined content as '{md5}3ec590d219afbf91a7c1a149a15e72cb'
==> default: Debug: /Stage[main]/Rvm::Rvmrc/File[/etc/rvmrc]: The container Class[Rvm::Rvmrc] will propagate my refresh event
==> default: Debug: Prefetching apt resources for package
==> default: Debug: Executing '/usr/bin/dpkg-query -W --showformat '${Status} ${Package} ${Version}\n''
==> default: Debug: Class[Rvm::Rvmrc]: The container Stage[main] will propagate my refresh event
==> default: Debug: Executing '/usr/bin/dpkg-query -W --showformat '${Status} ${Package} ${Version}\n' libcurl4-gnutls-dev'
==> default: Debug: Executing '/usr/bin/apt-get -q -y -o DPkg::Options::=--force-confold install libcurl4-gnutls-dev'
==> default: Notice: /Stage[main]/Rvm::Passenger::Dependencies::Ubuntu/Package[libcurl4-gnutls-dev]/ensure: ensure changed 'purged' to 'present'
==> default: Debug: /Stage[main]/Rvm::Passenger::Dependencies::Ubuntu/Package[libcurl4-gnutls-dev]: The container Class[Rvm::Passenger::Dependencies::Ubuntu] will propagate my refresh event
==> default: Debug: /Stage[main]/Apt/File[old-proxy-file]: Nothing to manage: no ensure and the resource doesn't exist
==> default: Debug: /Stage[main]/Apt/File[01proxy]: Nothing to manage: no ensure and the resource doesn't exist
==> default: Debug: Exec[apt_update](provider=posix): Executing '/usr/bin/apt-get update'
==> default: Debug: Executing '/usr/bin/apt-get update'
==> default: Notice: /Stage[main]/Apt::Update/Exec[apt_update]/returns: executed successfully
==> default: Debug: /Stage[main]/Apt::Update/Exec[apt_update]: The container Class[Apt::Update] will propagate my refresh event
==> default: Debug: Class[Apt::Update]: The container Stage[main] will propagate my refresh event
==> default: Notice: /Stage[main]/Apt/File[/etc/apt/apt.conf.d/15update-stamp]/ensure: defined content as '{md5}92afc1e969a04f0764e9ae8343aa9f2f'
==> default: Debug: /Stage[main]/Apt/File[/etc/apt/apt.conf.d/15update-stamp]: The container Class[Apt] will propagate my refresh event
==> default: Debug: Class[Apt]: The container Stage[main] will propagate my refresh event
==> default: Debug: Executing '/usr/bin/dpkg-query -W --showformat '${Status} ${Package} ${Version}\n' build-essential'
==> default: Debug: Executing '/usr/bin/apt-get -q -y -o DPkg::Options::=--force-confold install build-essential'
==> default: Notice: /Stage[main]/Main/Package[build-essential]/ensure: ensure changed 'purged' to 'present'
==> default: Debug: /Stage[main]/Main/Package[build-essential]: The container Class[Main] will propagate my refresh event
==> default: Debug: Executing '/usr/bin/dpkg-query -W --showformat '${Status} ${Package} ${Version}\n' libxslt1-dev'
==> default: Debug: Executing '/usr/bin/apt-get -q -y -o DPkg::Options::=--force-confold install libxslt1-dev'
==> default: Notice: /Stage[main]/Main/Package[libxslt1-dev]/ensure: ensure changed 'purged' to 'present'
==> default: Debug: /Stage[main]/Main/Package[libxslt1-dev]: The container Class[Main] will propagate my refresh event
==> default: Debug: Executing '/usr/bin/dpkg-query -W --showformat '${Status} ${Package} ${Version}\n' git'
==> default: Debug: Executing '/usr/bin/apt-get -q -y -o DPkg::Options::=--force-confold install git'
==> default: Notice: /Stage[main]/Main/Package[git]/ensure: ensure changed 'purged' to 'present'
==> default: Debug: /Stage[main]/Main/Package[git]: The container Class[Main] will propagate my refresh event
==> default: Debug: Executing '/usr/bin/dpkg-query -W --showformat '${Status} ${Package} ${Version}\n' python-software-properties'
==> default: Debug: Executing '/usr/bin/apt-get -q -y -o DPkg::Options::=--force-confold install python-software-properties'
==> default: Notice: /Stage[main]/Main/Package[python-software-properties]/ensure: ensure changed 'purged' to 'present'
==> default: Debug: /Stage[main]/Main/Package[python-software-properties]: The container Class[Main] will propagate my refresh event
==> default: Debug: Executing '/usr/bin/dpkg-query -W --showformat '${Status} ${Package} ${Version}\n' nodejs'
==> default: Debug: Executing '/usr/bin/apt-get -q -y -o DPkg::Options::=--force-confold install nodejs'
==> default: Notice: /Stage[main]/Main/Package[nodejs]/ensure: ensure changed 'purged' to 'present'
==> default: Debug: /Stage[main]/Main/Package[nodejs]: The container Class[Main] will propagate my refresh event
==> default: Debug: Executing '/usr/bin/dpkg-query -W --showformat '${Status} ${Package} ${Version}\n' apache2'
==> default: Debug: Executing '/usr/bin/apt-get -q -y -o DPkg::Options::=--force-confold install apache2'
==> default: Notice: /Stage[main]/Apache/Package[httpd]/ensure: ensure changed 'purged' to 'present'
==> default: Debug: /Stage[main]/Apache/Package[httpd]: The container Class[Apache] will propagate my refresh event
==> default: Info: /Stage[main]/Apache/Package[httpd]: Scheduling refresh of Class[Apache::Service]
==> default: Debug: Exec[mkdir /etc/apache2/conf.d](provider=posix): Executing 'mkdir /etc/apache2/conf.d'
==> default: Debug: Executing 'mkdir /etc/apache2/conf.d'
==> default: Notice: /Stage[main]/Apache/Exec[mkdir /etc/apache2/conf.d]/returns: executed successfully
==> default: Debug: /Stage[main]/Apache/Exec[mkdir /etc/apache2/conf.d]: The container Class[Apache] will propagate my refresh event
==> default: Info: /Stage[main]/Apache/File[/etc/apache2/apache2.conf]: Filebucketed /etc/apache2/apache2.conf to puppet with sum da32fcc6a783acaebf0d74c17c726bf7
==> default: Notice: /Stage[main]/Apache/File[/etc/apache2/apache2.conf]/content: content changed '{md5}da32fcc6a783acaebf0d74c17c726bf7' to '{md5}06f39af0732cd99d9b3b3dc327348c90'
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/apache2.conf]: The container Class[Apache] will propagate my refresh event
==> default: Info: /Stage[main]/Apache/File[/etc/apache2/apache2.conf]: Scheduling refresh of Class[Apache::Service]
==> default: Debug: Executing '/usr/bin/dpkg-query -W --showformat '${Status} ${Package} ${Version}\n' libapr1-dev'
==> default: Debug: Executing '/usr/bin/apt-get -q -y -o DPkg::Options::=--force-confold install libapr1-dev'
==> default: Notice: /Stage[main]/Apache::Dev/Package[libapr1-dev]/ensure: ensure changed 'purged' to 'present'
==> default: Debug: /Stage[main]/Apache::Dev/Package[libapr1-dev]: The container Class[Apache::Dev] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/sites-enabled/000-default.conf]: Removing existing link for replacement with absent
==> default: Notice: /Stage[main]/Apache/File[/etc/apache2/sites-enabled/000-default.conf]/ensure: removed
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/sites-enabled/000-default.conf]: The container /etc/apache2/sites-enabled will propagate my refresh event
==> default: Debug: Executing '/usr/bin/dpkg-query -W --showformat '${Status} ${Package} ${Version}\n' apache2-prefork-dev'
==> default: Debug: Executing '/usr/bin/apt-get -q -y -o DPkg::Options::=--force-confold install apache2-prefork-dev'
==> default: Notice: /Stage[main]/Apache::Dev/Package[apache2-prefork-dev]/ensure: ensure changed 'purged' to 'present'
==> default: Debug: /Stage[main]/Apache::Dev/Package[apache2-prefork-dev]: The container Class[Apache::Dev] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat[15-default-ssl.conf]/File[/var/lib/puppet/concat/15-default-ssl.conf]: Nothing to manage: no ensure and the resource doesn't exist
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat[15-default-ssl.conf]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments]: Nothing to manage: no ensure and the resource doesn't exist
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat::Fragment[default-ssl-ssl]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments/200_default-ssl-ssl]: Nothing to manage: no ensure and the resource doesn't exist
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat::Fragment[default-ssl-logging]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments/70_default-ssl-logging]: Nothing to manage: no ensure and the resource doesn't exist
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat[15-default-ssl.conf]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments.concat.out]: Nothing to manage: no ensure and the resource doesn't exist
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat::Fragment[default-ssl-docroot]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments/10_default-ssl-docroot]: Nothing to manage: no ensure and the resource doesn't exist
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat::Fragment[default-ssl-apache-header]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments/0_default-ssl-apache-header]: Nothing to manage: no ensure and the resource doesn't exist
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat::Fragment[default-ssl-directories]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments/50_default-ssl-directories]: Nothing to manage: no ensure and the resource doesn't exist
==> default: Debug: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.load symlink]: Removing existing link for replacement with /etc/apache2/mods-available/mime.load
==> default: Debug: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.load symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.load symlink]/target: target changed '../mods-available/mime.load' to '/etc/apache2/mods-available/mime.load'
==> default: Debug: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.load symlink]/mode: Not managing symlink mode
==> default: Info: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.load symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.load symlink]: The container Apache::Mod[mime] will propagate my refresh event
==> default: Info: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_groupfile]/File[authz_groupfile.load]: Filebucketed /etc/apache2/mods-available/authz_groupfile.load to puppet with sum 97a3e14926ce7bf5f2d2a7b93ece648d
==> default: Notice: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_groupfile]/File[authz_groupfile.load]/content: content changed '{md5}97a3e14926ce7bf5f2d2a7b93ece648d' to '{md5}bf972e82336c72b20d67d871ef77d4ce'
==> default: Info: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_groupfile]/File[authz_groupfile.load]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_groupfile]/File[authz_groupfile.load]: The container Apache::Mod[authz_groupfile] will propagate my refresh event
==> default: Info: /Stage[main]/Apache::Mod::Reqtimeout/File[reqtimeout.conf]: Filebucketed /etc/apache2/mods-available/reqtimeout.conf to puppet with sum 40b45155afb3d14263d12e6fc4a98513
==> default: Notice: /Stage[main]/Apache::Mod::Reqtimeout/File[reqtimeout.conf]/content: content changed '{md5}40b45155afb3d14263d12e6fc4a98513' to '{md5}81c51851ab7ee7942bef389dc7c0e985'
==> default: Info: /Stage[main]/Apache::Mod::Reqtimeout/File[reqtimeout.conf]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Reqtimeout/File[reqtimeout.conf]: The container Class[Apache::Mod::Reqtimeout] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_groupfile]/File[authz_groupfile.load symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_groupfile]/File[authz_groupfile.load symlink]/ensure: created
==> default: Info: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_groupfile]/File[authz_groupfile.load symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_groupfile]/File[authz_groupfile.load symlink]: The container Apache::Mod[authz_groupfile] will propagate my refresh event
==> default: Info: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_user]/File[authz_user.load]: Filebucketed /etc/apache2/mods-available/authz_user.load to puppet with sum bcf988f105564ec1e14b78df56a01cd8
==> default: Notice: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_user]/File[authz_user.load]/content: content changed '{md5}bcf988f105564ec1e14b78df56a01cd8' to '{md5}69150f8246499e0135580d8cc16eaeab'
==> default: Info: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_user]/File[authz_user.load]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_user]/File[authz_user.load]: The container Apache::Mod[authz_user] will propagate my refresh event
==> default: Info: /Stage[main]/Apache::Mod::Mime/File[mime.conf]: Filebucketed /etc/apache2/mods-available/mime.conf to puppet with sum 7369c2fd5edf2192edbd6d865b632ae5
==> default: Notice: /Stage[main]/Apache::Mod::Mime/File[mime.conf]/content: content changed '{md5}7369c2fd5edf2192edbd6d865b632ae5' to '{md5}2fa646fe615e44d137a5d629f868c107'
==> default: Info: /Stage[main]/Apache::Mod::Mime/File[mime.conf]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Mime/File[mime.conf]: The container Class[Apache::Mod::Mime] will propagate my refresh event
==> default: Info: /Stage[main]/Apache::Default_mods/Apache::Mod[access_compat]/File[access_compat.load]: Filebucketed /etc/apache2/mods-available/access_compat.load to puppet with sum f7f77b3eb4005749b583ff14b49f8bf1
==> default: Notice: /Stage[main]/Apache::Default_mods/Apache::Mod[access_compat]/File[access_compat.load]/content: content changed '{md5}f7f77b3eb4005749b583ff14b49f8bf1' to '{md5}a3e92887d86700b30a3869d0e8c159d7'
==> default: Info: /Stage[main]/Apache::Default_mods/Apache::Mod[access_compat]/File[access_compat.load]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[access_compat]/File[access_compat.load]: The container Apache::Mod[access_compat] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[access_compat]/File[access_compat.load symlink]: Removing existing link for replacement with /etc/apache2/mods-available/access_compat.load
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[access_compat]/File[access_compat.load symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Default_mods/Apache::Mod[access_compat]/File[access_compat.load symlink]/target: target changed '../mods-available/access_compat.load' to '/etc/apache2/mods-available/access_compat.load'
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[access_compat]/File[access_compat.load symlink]/mode: Not managing symlink mode
==> default: Info: /Stage[main]/Apache::Default_mods/Apache::Mod[access_compat]/File[access_compat.load symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[access_compat]/File[access_compat.load symlink]: The container Apache::Mod[access_compat] will propagate my refresh event
==> default: Info: /Stage[main]/Apache::Mod::Setenvif/File[setenvif.conf]: Filebucketed /etc/apache2/mods-available/setenvif.conf to puppet with sum 533f5f92761c2c24d6820f1d7d1c45ad
==> default: Notice: /Stage[main]/Apache::Mod::Setenvif/File[setenvif.conf]/content: content changed '{md5}533f5f92761c2c24d6820f1d7d1c45ad' to '{md5}c7ede4173da1915b7ec088201f030c28'
==> default: Info: /Stage[main]/Apache::Mod::Setenvif/File[setenvif.conf]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/File[setenvif.conf]: The container Class[Apache::Mod::Setenvif] will propagate my refresh event
==> default: Info: /Stage[main]/Apache::Mod::Deflate/File[deflate.conf]: Filebucketed /etc/apache2/mods-available/deflate.conf to puppet with sum 6649a32153b9afdc53f6898b5a10a2d6
==> default: Notice: /Stage[main]/Apache::Mod::Deflate/File[deflate.conf]/content: content changed '{md5}6649a32153b9afdc53f6898b5a10a2d6' to '{md5}35506746efa82c4e203c8a724980bdc6'
==> default: Info: /Stage[main]/Apache::Mod::Deflate/File[deflate.conf]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/File[deflate.conf]: The container Class[Apache::Mod::Deflate] will propagate my refresh event
==> default: Info: /Stage[main]/Apache::Mod::Negotiation/File[negotiation.conf]: Filebucketed /etc/apache2/mods-available/negotiation.conf to puppet with sum 443398efdd41085bc1a70047f6e61c95
==> default: Notice: /Stage[main]/Apache::Mod::Negotiation/File[negotiation.conf]/content: content changed '{md5}443398efdd41085bc1a70047f6e61c95' to '{md5}47284b5580b986a6ba32580b6ffb9fd7'
==> default: Info: /Stage[main]/Apache::Mod::Negotiation/File[negotiation.conf]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/File[negotiation.conf]: The container Class[Apache::Mod::Negotiation] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.conf symlink]: Removing existing link for replacement with /etc/apache2/mods-available/negotiation.conf
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.conf symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.conf symlink]/target: target changed '../mods-available/negotiation.conf' to '/etc/apache2/mods-available/negotiation.conf'
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.conf symlink]/mode: Not managing symlink mode
==> default: Info: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.conf symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.conf symlink]: The container Apache::Mod[negotiation] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.load symlink]: Removing existing link for replacement with /etc/apache2/mods-available/alias.load
==> default: Debug: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.load symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.load symlink]/target: target changed '../mods-available/alias.load' to '/etc/apache2/mods-available/alias.load'
==> default: Debug: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.load symlink]/mode: Not managing symlink mode
==> default: Info: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.load symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.load symlink]: The container Apache::Mod[alias] will propagate my refresh event
==> default: Info: /Stage[main]/Apache::Mod::Dir/File[dir.conf]: Filebucketed /etc/apache2/mods-available/dir.conf to puppet with sum fe4bc5fa3b3cc7a241fe57f8fabc55a1
==> default: Notice: /Stage[main]/Apache::Mod::Dir/File[dir.conf]/content: content changed '{md5}fe4bc5fa3b3cc7a241fe57f8fabc55a1' to '{md5}c741d8ea840e6eb999d739eed47c69d7'
==> default: Info: /Stage[main]/Apache::Mod::Dir/File[dir.conf]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Dir/File[dir.conf]: The container Class[Apache::Mod::Dir] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.conf symlink]: Removing existing link for replacement with /etc/apache2/mods-available/dir.conf
==> default: Debug: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.conf symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.conf symlink]/target: target changed '../mods-available/dir.conf' to '/etc/apache2/mods-available/dir.conf'
==> default: Debug: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.conf symlink]/mode: Not managing symlink mode
==> default: Info: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.conf symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.conf symlink]: The container Apache::Mod[dir] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.conf symlink]: Removing existing link for replacement with /etc/apache2/mods-available/deflate.conf
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.conf symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.conf symlink]/target: target changed '../mods-available/deflate.conf' to '/etc/apache2/mods-available/deflate.conf'
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.conf symlink]/mode: Not managing symlink mode
==> default: Info: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.conf symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.conf symlink]: The container Apache::Mod[deflate] will propagate my refresh event
==> default: Debug: Apache::Mod[access_compat]: The container Class[Apache::Default_mods] will propagate my refresh event
==> default: Info: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.load]: Filebucketed /etc/apache2/mods-available/deflate.load to puppet with sum 6a7a23153796456ee919abdf728fd972
==> default: Notice: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.load]/content: content changed '{md5}6a7a23153796456ee919abdf728fd972' to '{md5}ac4540dd672556b07f900425751f745c'
==> default: Info: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.load]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.load]: The container Apache::Mod[deflate] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.load symlink]: Removing existing link for replacement with /etc/apache2/mods-available/deflate.load
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.load symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.load symlink]/target: target changed '../mods-available/deflate.load' to '/etc/apache2/mods-available/deflate.load'
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.load symlink]/mode: Not managing symlink mode
==> default: Info: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.load symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Deflate/Apache::Mod[deflate]/File[deflate.load symlink]: The container Apache::Mod[deflate] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Mod::Reqtimeout/Apache::Mod[reqtimeout]/File[reqtimeout.conf symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Mod::Reqtimeout/Apache::Mod[reqtimeout]/File[reqtimeout.conf symlink]/ensure: created
==> default: Info: /Stage[main]/Apache::Mod::Reqtimeout/Apache::Mod[reqtimeout]/File[reqtimeout.conf symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Reqtimeout/Apache::Mod[reqtimeout]/File[reqtimeout.conf symlink]: The container Apache::Mod[reqtimeout] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.load symlink]: Removing existing link for replacement with /etc/apache2/mods-available/setenvif.load
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.load symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.load symlink]/target: target changed '../mods-available/setenvif.load' to '/etc/apache2/mods-available/setenvif.load'
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.load symlink]/mode: Not managing symlink mode
==> default: Info: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.load symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.load symlink]: The container Apache::Mod[setenvif] will propagate my refresh event
==> default: Info: /Stage[main]/Apache::Default_mods/Apache::Mod[auth_basic]/File[auth_basic.load]: Filebucketed /etc/apache2/mods-available/auth_basic.load to puppet with sum a92c34a3ce5e67e2ecbd272155ebe072
==> default: Notice: /Stage[main]/Apache::Default_mods/Apache::Mod[auth_basic]/File[auth_basic.load]/content: content changed '{md5}a92c34a3ce5e67e2ecbd272155ebe072' to '{md5}5eec35bb52e1ae9ff5eec602ed1d2374'
==> default: Info: /Stage[main]/Apache::Default_mods/Apache::Mod[auth_basic]/File[auth_basic.load]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[auth_basic]/File[auth_basic.load]: The container Apache::Mod[auth_basic] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[auth_basic]/File[auth_basic.load symlink]: Removing existing link for replacement with /etc/apache2/mods-available/auth_basic.load
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[auth_basic]/File[auth_basic.load symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Default_mods/Apache::Mod[auth_basic]/File[auth_basic.load symlink]/target: target changed '../mods-available/auth_basic.load' to '/etc/apache2/mods-available/auth_basic.load'
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[auth_basic]/File[auth_basic.load symlink]/mode: Not managing symlink mode
==> default: Info: /Stage[main]/Apache::Default_mods/Apache::Mod[auth_basic]/File[auth_basic.load symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[auth_basic]/File[auth_basic.load symlink]: The container Apache::Mod[auth_basic] will propagate my refresh event
==> default: Notice: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/File[/var/lib/puppet/concat/_etc_apache2_ports.conf]/ensure: created
==> default: Info: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/File[/var/lib/puppet/concat/_etc_apache2_ports.conf]: Scheduling refresh of Exec[concat_/etc/apache2/ports.conf]
==> default: Debug: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/File[/var/lib/puppet/concat/_etc_apache2_ports.conf]: The container Concat[/etc/apache2/ports.conf] will propagate my refresh event
==> default: Notice: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments.concat.out]/ensure: created
==> default: Debug: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments.concat.out]: The container Concat[/etc/apache2/ports.conf] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_file]/File[authn_file.load symlink]: Removing existing link for replacement with /etc/apache2/mods-available/authn_file.load
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_file]/File[authn_file.load symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_file]/File[authn_file.load symlink]/target: target changed '../mods-available/authn_file.load' to '/etc/apache2/mods-available/authn_file.load'
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_file]/File[authn_file.load symlink]/mode: Not managing symlink mode
==> default: Info: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_file]/File[authn_file.load symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_file]/File[authn_file.load symlink]: The container Apache::Mod[authn_file] will propagate my refresh event
==> default: Debug: Apache::Mod[authn_file]: The container Class[Apache::Default_mods] will propagate my refresh event
==> default: Notice: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/File[/var/lib/puppet/concat/15-default.conf]/ensure: created
==> default: Info: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/File[/var/lib/puppet/concat/15-default.conf]: Scheduling refresh of Exec[concat_15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/File[/var/lib/puppet/concat/15-default.conf]: The container Concat[15-default.conf] will propagate my refresh event
==> default: Notice: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/File[/var/lib/puppet/concat/15-default.conf/fragments]/ensure: created
==> default: Info: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/File[/var/lib/puppet/concat/15-default.conf/fragments]: Scheduling refresh of Exec[concat_15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/File[/var/lib/puppet/concat/15-default.conf/fragments]: The container Concat[15-default.conf] will propagate my refresh event
==> default: Notice: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-file_footer]/File[/var/lib/puppet/concat/15-default.conf/fragments/999_default-file_footer]/ensure: defined content as '{md5}e27b2525783e590ca1820f1e2118285d'
==> default: Info: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-file_footer]/File[/var/lib/puppet/concat/15-default.conf/fragments/999_default-file_footer]: Scheduling refresh of Exec[concat_15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-file_footer]/File[/var/lib/puppet/concat/15-default.conf/fragments/999_default-file_footer]: The container Concat::Fragment[default-file_footer] will propagate my refresh event
==> default: Notice: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-docroot]/File[/var/lib/puppet/concat/15-default.conf/fragments/10_default-docroot]/ensure: defined content as '{md5}4313d14f6739a5147d4db8b93b9068b0'
==> default: Info: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-docroot]/File[/var/lib/puppet/concat/15-default.conf/fragments/10_default-docroot]: Scheduling refresh of Exec[concat_15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-docroot]/File[/var/lib/puppet/concat/15-default.conf/fragments/10_default-docroot]: The container Concat::Fragment[default-docroot] will propagate my refresh event
==> default: Debug: Concat::Fragment[default-docroot]: The container Apache::Vhost[default] will propagate my refresh event
==> default: Notice: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-serversignature]/File[/var/lib/puppet/concat/15-default.conf/fragments/80_default-serversignature]/ensure: defined content as '{md5}9bf5a458783ab459e5043e1cdf671fa7'
==> default: Info: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-serversignature]/File[/var/lib/puppet/concat/15-default.conf/fragments/80_default-serversignature]: Scheduling refresh of Exec[concat_15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-serversignature]/File[/var/lib/puppet/concat/15-default.conf/fragments/80_default-serversignature]: The container Concat::Fragment[default-serversignature] will propagate my refresh event
==> default: Notice: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-apache-header]/File[/var/lib/puppet/concat/15-default.conf/fragments/0_default-apache-header]/ensure: defined content as '{md5}c46eea5ff4d7874403fa7a9228888f0e'
==> default: Info: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-apache-header]/File[/var/lib/puppet/concat/15-default.conf/fragments/0_default-apache-header]: Scheduling refresh of Exec[concat_15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-apache-header]/File[/var/lib/puppet/concat/15-default.conf/fragments/0_default-apache-header]: The container Concat::Fragment[default-apache-header] will propagate my refresh event
==> default: Debug: Concat::Fragment[default-apache-header]: The container Apache::Vhost[default] will propagate my refresh event
==> default: Notice: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/File[/var/lib/puppet/concat/15-default.conf/fragments.concat]/ensure: created
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/File[/var/lib/puppet/concat/15-default.conf/fragments.concat]: The container Concat[15-default.conf] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Mod::Dav/Apache::Mod[dav]/File[dav.load symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Mod::Dav/Apache::Mod[dav]/File[dav.load symlink]/ensure: created
==> default: Info: /Stage[main]/Apache::Mod::Dav/Apache::Mod[dav]/File[dav.load symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Dav/Apache::Mod[dav]/File[dav.load symlink]: The container Apache::Mod[dav] will propagate my refresh event
==> default: Debug: Apache::Mod[dav]: The container Class[Apache::Mod::Dav] will propagate my refresh event
==> default: Debug: Class[Apache::Mod::Dav]: The container Stage[main] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Mod::Reqtimeout/Apache::Mod[reqtimeout]/File[reqtimeout.load symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Mod::Reqtimeout/Apache::Mod[reqtimeout]/File[reqtimeout.load symlink]/ensure: created
==> default: Info: /Stage[main]/Apache::Mod::Reqtimeout/Apache::Mod[reqtimeout]/File[reqtimeout.load symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Reqtimeout/Apache::Mod[reqtimeout]/File[reqtimeout.load symlink]: The container Apache::Mod[reqtimeout] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat::Fragment[default-ssl-access_log]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments/90_default-ssl-access_log]: Nothing to manage: no ensure and the resource doesn't exist
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat::Fragment[default-ssl-serversignature]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments/80_default-ssl-serversignature]: Nothing to manage: no ensure and the resource doesn't exist
==> default: Notice: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments.concat]/ensure: created
==> default: Debug: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments.concat]: The container Concat[/etc/apache2/ports.conf] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.load symlink]: Removing existing link for replacement with /etc/apache2/mods-available/dir.load
==> default: Debug: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.load symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.load symlink]/target: target changed '../mods-available/dir.load' to '/etc/apache2/mods-available/dir.load'
==> default: Debug: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.load symlink]/mode: Not managing symlink mode
==> default: Info: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.load symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Dir/Apache::Mod[dir]/File[dir.load symlink]: The container Apache::Mod[dir] will propagate my refresh event
==> default: Debug: Apache::Mod[dir]: The container Class[Apache::Mod::Dir] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.conf symlink]: Removing existing link for replacement with /etc/apache2/mods-available/mime.conf
==> default: Debug: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.conf symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.conf symlink]/target: target changed '../mods-available/mime.conf' to '/etc/apache2/mods-available/mime.conf'
==> default: Debug: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.conf symlink]/mode: Not managing symlink mode
==> default: Info: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.conf symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Mime/Apache::Mod[mime]/File[mime.conf symlink]: The container Apache::Mod[mime] will propagate my refresh event
==> default: Debug: Apache::Mod[mime]: The container Class[Apache::Mod::Mime] will propagate my refresh event
==> default: Debug: /etc/apache2/sites-enabled: The container Class[Apache] will propagate my refresh event
==> default: Info: /etc/apache2/sites-enabled: Scheduling refresh of Class[Apache::Service]
==> default: Debug: Class[Apache::Mod::Mime]: The container Stage[main] will propagate my refresh event
==> default: Info: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.load]: Filebucketed /etc/apache2/mods-available/dav_fs.load to puppet with sum 17f662fd023dbaaab9d89f9a11ae58c1
==> default: Notice: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.load]/content: content changed '{md5}17f662fd023dbaaab9d89f9a11ae58c1' to '{md5}3fa14d6e9f9d8eb25d09ed4823508f6d'
==> default: Info: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.load]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.load]: The container Apache::Mod[dav_fs] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.load symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.load symlink]/ensure: created
==> default: Info: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.load symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.load symlink]: The container Apache::Mod[dav_fs] will propagate my refresh event
==> default: Debug: Apache::Mod[reqtimeout]: The container Class[Apache::Mod::Reqtimeout] will propagate my refresh event
==> default: Debug: Class[Apache::Mod::Reqtimeout]: The container Stage[main] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_core]/File[authn_core.load symlink]: Removing existing link for replacement with /etc/apache2/mods-available/authn_core.load
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_core]/File[authn_core.load symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_core]/File[authn_core.load symlink]/target: target changed '../mods-available/authn_core.load' to '/etc/apache2/mods-available/authn_core.load'
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_core]/File[authn_core.load symlink]/mode: Not managing symlink mode
==> default: Info: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_core]/File[authn_core.load symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authn_core]/File[authn_core.load symlink]: The container Apache::Mod[authn_core] will propagate my refresh event
==> default: Info: /Stage[main]/Apache::Mod::Alias/File[alias.conf]: Filebucketed /etc/apache2/mods-available/alias.conf to puppet with sum c6e9f26152898c38e58211c8b362d5c3
==> default: Notice: /Stage[main]/Apache::Mod::Alias/File[alias.conf]/content: content changed '{md5}c6e9f26152898c38e58211c8b362d5c3' to '{md5}cb528041df274fb077800a8e2e64f94e'
==> default: Info: /Stage[main]/Apache::Mod::Alias/File[alias.conf]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Alias/File[alias.conf]: The container Class[Apache::Mod::Alias] will propagate my refresh event
==> default: Notice: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/File[/var/lib/puppet/concat/15-default.conf/fragments.concat.out]/ensure: created
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/File[/var/lib/puppet/concat/15-default.conf/fragments.concat.out]: The container Concat[15-default.conf] will propagate my refresh event
==> default: Debug: Concat::Fragment[default-serversignature]: The container Apache::Vhost[default] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.conf symlink]: Removing existing link for replacement with /etc/apache2/mods-available/alias.conf
==> default: Debug: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.conf symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.conf symlink]/target: target changed '../mods-available/alias.conf' to '/etc/apache2/mods-available/alias.conf'
==> default: Debug: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.conf symlink]/mode: Not managing symlink mode
==> default: Info: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.conf symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Alias/Apache::Mod[alias]/File[alias.conf symlink]: The container Apache::Mod[alias] will propagate my refresh event
==> default: Debug: Apache::Mod[alias]: The container Class[Apache::Mod::Alias] will propagate my refresh event
==> default: Debug: Concat::Fragment[default-file_footer]: The container Apache::Vhost[default] will propagate my refresh event
==> default: Debug: Executing '/usr/bin/dpkg-query -W --showformat '${Status} ${Package} ${Version}\n' libaprutil1-dev'
==> default: Debug: Class[Apache::Dev]: The container Stage[main] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_core]/File[authz_core.load symlink]: Removing existing link for replacement with /etc/apache2/mods-available/authz_core.load
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_core]/File[authz_core.load symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_core]/File[authz_core.load symlink]/target: target changed '../mods-available/authz_core.load' to '/etc/apache2/mods-available/authz_core.load'
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_core]/File[authz_core.load symlink]/mode: Not managing symlink mode
==> default: Info: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_core]/File[authz_core.load symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_core]/File[authz_core.load symlink]: The container Apache::Mod[authz_core] will propagate my refresh event
==> default: Debug: Apache::Mod[authz_core]: The container Class[Apache::Default_mods] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.load symlink]: Removing existing link for replacement with /etc/apache2/mods-available/negotiation.load
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.load symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.load symlink]/target: target changed '../mods-available/negotiation.load' to '/etc/apache2/mods-available/negotiation.load'
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.load symlink]/mode: Not managing symlink mode
==> default: Info: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.load symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Negotiation/Apache::Mod[negotiation]/File[negotiation.load symlink]: The container Apache::Mod[negotiation] will propagate my refresh event
==> default: Debug: Apache::Mod[negotiation]: The container Class[Apache::Mod::Negotiation] will propagate my refresh event
==> default: Debug: Class[Apache::Mod::Negotiation]: The container Stage[main] will propagate my refresh event
==> default: Notice: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments]/ensure: created
==> default: Info: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments]: Scheduling refresh of Exec[concat_/etc/apache2/ports.conf]
==> default: Debug: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments]: The container Concat[/etc/apache2/ports.conf] will propagate my refresh event
==> default: Notice: /Stage[main]/Apache/Apache::Vhost[default]/Apache::Listen[80]/Concat::Fragment[Listen 80]/File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments/10_Listen 80]/ensure: defined content as '{md5}d5fcefc335117f400d451de47efeca87'
==> default: Info: /Stage[main]/Apache/Apache::Vhost[default]/Apache::Listen[80]/Concat::Fragment[Listen 80]/File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments/10_Listen 80]: Scheduling refresh of Exec[concat_/etc/apache2/ports.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Apache::Listen[80]/Concat::Fragment[Listen 80]/File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments/10_Listen 80]: The container Concat::Fragment[Listen 80] will propagate my refresh event
==> default: Debug: Concat::Fragment[Listen 80]: The container Apache::Listen[80] will propagate my refresh event
==> default: Debug: Apache::Listen[80]: The container Apache::Vhost[default] will propagate my refresh event
==> default: Notice: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-directories]/File[/var/lib/puppet/concat/15-default.conf/fragments/50_default-directories]/ensure: defined content as '{md5}8ff31744e3547f101e64881268749b9d'
==> default: Info: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-directories]/File[/var/lib/puppet/concat/15-default.conf/fragments/50_default-directories]: Scheduling refresh of Exec[concat_15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-directories]/File[/var/lib/puppet/concat/15-default.conf/fragments/50_default-directories]: The container Concat::Fragment[default-directories] will propagate my refresh event
==> default: Debug: Concat::Fragment[default-directories]: The container Apache::Vhost[default] will propagate my refresh event
==> default: Debug: Apache::Mod[auth_basic]: The container Class[Apache::Default_mods] will propagate my refresh event
==> default: Info: /Stage[main]/Apache/File[/etc/apache2/sites-available/default-ssl.conf]: Filebucketed /etc/apache2/sites-available/default-ssl.conf to puppet with sum 62e941b4a0ff9e7794e82c98c8a846a2
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/sites-available/default-ssl.conf]: Removing existing file for replacement with absent
==> default: Notice: /Stage[main]/Apache/File[/etc/apache2/sites-available/default-ssl.conf]/ensure: removed
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/sites-available/default-ssl.conf]: The container /etc/apache2/sites-available will propagate my refresh event
==> default: Debug: Class[Apache::Mod::Alias]: The container Stage[main] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.conf symlink]: Removing existing link for replacement with /etc/apache2/mods-available/setenvif.conf
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.conf symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.conf symlink]/target: target changed '../mods-available/setenvif.conf' to '/etc/apache2/mods-available/setenvif.conf'
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.conf symlink]/mode: Not managing symlink mode
==> default: Info: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.conf symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Setenvif/Apache::Mod[setenvif]/File[setenvif.conf symlink]: The container Apache::Mod[setenvif] will propagate my refresh event
==> default: Debug: Apache::Mod[setenvif]: The container Class[Apache::Mod::Setenvif] will propagate my refresh event
==> default: Debug: Class[Apache::Mod::Setenvif]: The container Stage[main] will propagate my refresh event
==> default: Debug: Class[Apache::Mod::Dir]: The container Stage[main] will propagate my refresh event
==> default: Debug: Executing '/usr/bin/dpkg-query -W --showformat '${Status} ${Package} ${Version}\n' libxml2-dev'
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.load symlink]: Removing existing link for replacement with /etc/apache2/mods-available/autoindex.load
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.load symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.load symlink]/target: target changed '../mods-available/autoindex.load' to '/etc/apache2/mods-available/autoindex.load'
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.load symlink]/mode: Not managing symlink mode
==> default: Info: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.load symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.load symlink]: The container Apache::Mod[autoindex] will propagate my refresh event
==> default: Debug: Apache::Mod[authz_groupfile]: The container Class[Apache::Default_mods] will propagate my refresh event
==> default: Info: /Stage[main]/Apache::Mod::Autoindex/File[autoindex.conf]: Filebucketed /etc/apache2/mods-available/autoindex.conf to puppet with sum bfba7d77669e02b869b92e98215d58fc
==> default: Notice: /Stage[main]/Apache::Mod::Autoindex/File[autoindex.conf]/content: content changed '{md5}bfba7d77669e02b869b92e98215d58fc' to '{md5}2421a3c6df32c7e38c2a7a22afdf5728'
==> default: Info: /Stage[main]/Apache::Mod::Autoindex/File[autoindex.conf]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/File[autoindex.conf]: The container Class[Apache::Mod::Autoindex] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.conf symlink]: Removing existing link for replacement with /etc/apache2/mods-available/autoindex.conf
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.conf symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.conf symlink]/target: target changed '../mods-available/autoindex.conf' to '/etc/apache2/mods-available/autoindex.conf'
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.conf symlink]/mode: Not managing symlink mode
==> default: Info: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.conf symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Autoindex/Apache::Mod[autoindex]/File[autoindex.conf symlink]: The container Apache::Mod[autoindex] will propagate my refresh event
==> default: Debug: Apache::Mod[autoindex]: The container Class[Apache::Mod::Autoindex] will propagate my refresh event
==> default: Debug: Class[Apache::Mod::Autoindex]: The container Stage[main] will propagate my refresh event
==> default: Notice: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-logging]/File[/var/lib/puppet/concat/15-default.conf/fragments/70_default-logging]/ensure: defined content as '{md5}1b65723b465705c7bbec89027f4c277f'
==> default: Info: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-logging]/File[/var/lib/puppet/concat/15-default.conf/fragments/70_default-logging]: Scheduling refresh of Exec[concat_15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-logging]/File[/var/lib/puppet/concat/15-default.conf/fragments/70_default-logging]: The container Concat::Fragment[default-logging] will propagate my refresh event
==> default: Debug: Concat::Fragment[default-logging]: The container Apache::Vhost[default] will propagate my refresh event
==> default: Notice: /Stage[main]/Apache/Concat::Fragment[Apache ports header]/File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments/10_Apache ports header]/ensure: defined content as '{md5}afe35cb5747574b700ebaa0f0b3a626e'
==> default: Info: /Stage[main]/Apache/Concat::Fragment[Apache ports header]/File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments/10_Apache ports header]: Scheduling refresh of Exec[concat_/etc/apache2/ports.conf]
==> default: Debug: /Stage[main]/Apache/Concat::Fragment[Apache ports header]/File[/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments/10_Apache ports header]: The container Concat::Fragment[Apache ports header] will propagate my refresh event
==> default: Debug: Concat::Fragment[Apache ports header]: The container Class[Apache] will propagate my refresh event
==> default: Debug: Exec[concat_/etc/apache2/ports.conf](provider=posix): Executing check '/var/lib/puppet/concat/bin/concatfragments.sh -o "/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments.concat.out" -d "/var/lib/puppet/concat/_etc_apache2_ports.conf" -t'
==> default: Debug: Executing '/var/lib/puppet/concat/bin/concatfragments.sh -o "/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments.concat.out" -d "/var/lib/puppet/concat/_etc_apache2_ports.conf" -t'
==> default: Debug: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/Exec[concat_/etc/apache2/ports.conf]/unless: cmp: EOF on /var/lib/puppet/concat/_etc_apache2_ports.conf/fragments.concat.out
==> default: Debug: Exec[concat_/etc/apache2/ports.conf](provider=posix): Executing '/var/lib/puppet/concat/bin/concatfragments.sh -o "/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments.concat.out" -d "/var/lib/puppet/concat/_etc_apache2_ports.conf"'
==> default: Debug: Executing '/var/lib/puppet/concat/bin/concatfragments.sh -o "/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments.concat.out" -d "/var/lib/puppet/concat/_etc_apache2_ports.conf"'
==> default: Notice: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/Exec[concat_/etc/apache2/ports.conf]/returns: executed successfully
==> default: Debug: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/Exec[concat_/etc/apache2/ports.conf]: The container Concat[/etc/apache2/ports.conf] will propagate my refresh event
==> default: Debug: Exec[concat_/etc/apache2/ports.conf](provider=posix): Executing check '/var/lib/puppet/concat/bin/concatfragments.sh -o "/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments.concat.out" -d "/var/lib/puppet/concat/_etc_apache2_ports.conf" -t'
==> default: Debug: Executing '/var/lib/puppet/concat/bin/concatfragments.sh -o "/var/lib/puppet/concat/_etc_apache2_ports.conf/fragments.concat.out" -d "/var/lib/puppet/concat/_etc_apache2_ports.conf" -t'
==> default: Notice: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/Exec[concat_/etc/apache2/ports.conf]: Triggered 'refresh' from 4 events
==> default: Debug: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/Exec[concat_/etc/apache2/ports.conf]: The container Concat[/etc/apache2/ports.conf] will propagate my refresh event
==> default: Info: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/File[/etc/apache2/ports.conf]: Filebucketed /etc/apache2/ports.conf to puppet with sum a961f23471d985c2b819b652b7f64321
==> default: Notice: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/File[/etc/apache2/ports.conf]/content: content changed '{md5}a961f23471d985c2b819b652b7f64321' to '{md5}334fa5cddbf9a408ea1ca7a1666b1fc4'
==> default: Debug: /Stage[main]/Apache/Concat[/etc/apache2/ports.conf]/File[/etc/apache2/ports.conf]: The container Concat[/etc/apache2/ports.conf] will propagate my refresh event
==> default: Debug: Concat[/etc/apache2/ports.conf]: The container Class[Apache] will propagate my refresh event
==> default: Info: Concat[/etc/apache2/ports.conf]: Scheduling refresh of Class[Apache::Service]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat::Fragment[default-ssl-file_footer]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments/999_default-ssl-file_footer]: Nothing to manage: no ensure and the resource doesn't exist
==> default: Debug: Exec[concat_15-default-ssl.conf](provider=posix): Executing check 'true'
==> default: Debug: Executing 'true'
==> default: Info: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_host]/File[authz_host.load]: Filebucketed /etc/apache2/mods-available/authz_host.load to puppet with sum f529587409471e3feb62256bccaf538a
==> default: Notice: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_host]/File[authz_host.load]/content: content changed '{md5}f529587409471e3feb62256bccaf538a' to '{md5}4b8162e3e3a58d1dc2222e2ad352bd93'
==> default: Info: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_host]/File[authz_host.load]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_host]/File[authz_host.load]: The container Apache::Mod[authz_host] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_host]/File[authz_host.load symlink]: Removing existing link for replacement with /etc/apache2/mods-available/authz_host.load
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_host]/File[authz_host.load symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_host]/File[authz_host.load symlink]/target: target changed '../mods-available/authz_host.load' to '/etc/apache2/mods-available/authz_host.load'
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_host]/File[authz_host.load symlink]/mode: Not managing symlink mode
==> default: Info: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_host]/File[authz_host.load symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_host]/File[authz_host.load symlink]: The container Apache::Mod[authz_host] will propagate my refresh event
==> default: Debug: Apache::Mod[authz_host]: The container Class[Apache::Default_mods] will propagate my refresh event
==> default: Debug: Apache::Mod[authn_core]: The container Class[Apache::Default_mods] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[filter]/File[filter.load symlink]: Removing existing link for replacement with /etc/apache2/mods-available/filter.load
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[filter]/File[filter.load symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Default_mods/Apache::Mod[filter]/File[filter.load symlink]/target: target changed '../mods-available/filter.load' to '/etc/apache2/mods-available/filter.load'
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[filter]/File[filter.load symlink]/mode: Not managing symlink mode
==> default: Info: /Stage[main]/Apache::Default_mods/Apache::Mod[filter]/File[filter.load symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[filter]/File[filter.load symlink]: The container Apache::Mod[filter] will propagate my refresh event
==> default: Notice: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-access_log]/File[/var/lib/puppet/concat/15-default.conf/fragments/90_default-access_log]/ensure: defined content as '{md5}5e1f83d8624e56538daa6afb2f5510e8'
==> default: Info: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-access_log]/File[/var/lib/puppet/concat/15-default.conf/fragments/90_default-access_log]: Scheduling refresh of Exec[concat_15-default.conf]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat::Fragment[default-access_log]/File[/var/lib/puppet/concat/15-default.conf/fragments/90_default-access_log]: The container Concat::Fragment[default-access_log] will propagate my refresh event
==> default: Debug: Exec[concat_15-default.conf](provider=posix): Executing check '/var/lib/puppet/concat/bin/concatfragments.sh -o "/var/lib/puppet/concat/15-default.conf/fragments.concat.out" -d "/var/lib/puppet/concat/15-default.conf" -n -t'
==> default: Debug: Executing '/var/lib/puppet/concat/bin/concatfragments.sh -o "/var/lib/puppet/concat/15-default.conf/fragments.concat.out" -d "/var/lib/puppet/concat/15-default.conf" -n -t'
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/Exec[concat_15-default.conf]/unless: cmp: EOF on /var/lib/puppet/concat/15-default.conf/fragments.concat.out
==> default: Debug: Exec[concat_15-default.conf](provider=posix): Executing '/var/lib/puppet/concat/bin/concatfragments.sh -o "/var/lib/puppet/concat/15-default.conf/fragments.concat.out" -d "/var/lib/puppet/concat/15-default.conf" -n'
==> default: Debug: Executing '/var/lib/puppet/concat/bin/concatfragments.sh -o "/var/lib/puppet/concat/15-default.conf/fragments.concat.out" -d "/var/lib/puppet/concat/15-default.conf" -n'
==> default: Notice: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/Exec[concat_15-default.conf]/returns: executed successfully
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/Exec[concat_15-default.conf]: The container Concat[15-default.conf] will propagate my refresh event
==> default: Debug: Exec[concat_15-default.conf](provider=posix): Executing check '/var/lib/puppet/concat/bin/concatfragments.sh -o "/var/lib/puppet/concat/15-default.conf/fragments.concat.out" -d "/var/lib/puppet/concat/15-default.conf" -n -t'
==> default: Debug: Executing '/var/lib/puppet/concat/bin/concatfragments.sh -o "/var/lib/puppet/concat/15-default.conf/fragments.concat.out" -d "/var/lib/puppet/concat/15-default.conf" -n -t'
==> default: Notice: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/Exec[concat_15-default.conf]: Triggered 'refresh' from 9 events
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/Exec[concat_15-default.conf]: The container Concat[15-default.conf] will propagate my refresh event
==> default: Debug: Concat::Fragment[default-access_log]: The container Apache::Vhost[default] will propagate my refresh event
==> default: Notice: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-available/worker.load]/ensure: defined content as '{md5}3064ef75f030fbf76986f6f073beb113'
==> default: Info: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-available/worker.load]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-available/worker.load]: The container Apache::Mpm[worker] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-enabled/worker.load]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-enabled/worker.load]/ensure: created
==> default: Info: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-enabled/worker.load]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-enabled/worker.load]: The container Apache::Mpm[worker] will propagate my refresh event
==> default: Notice: /Stage[main]/Apache::Mod::Worker/File[/etc/apache2/mods-available/worker.conf]/ensure: defined content as '{md5}59cf27b20f14393692303b41f3071df6'
==> default: Info: /Stage[main]/Apache::Mod::Worker/File[/etc/apache2/mods-available/worker.conf]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Worker/File[/etc/apache2/mods-available/worker.conf]: The container Class[Apache::Mod::Worker] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-enabled/worker.conf]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-enabled/worker.conf]/ensure: created
==> default: Info: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-enabled/worker.conf]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Worker/Apache::Mpm[worker]/File[/etc/apache2/mods-enabled/worker.conf]: The container Apache::Mpm[worker] will propagate my refresh event
==> default: Debug: Apache::Mpm[worker]: The container Class[Apache::Mod::Worker] will propagate my refresh event
==> default: Debug: Class[Apache::Mod::Worker]: The container Stage[main] will propagate my refresh event
==> default: Info: /Stage[main]/Apache::Mod::Cgid/File[cgid.conf]: Filebucketed /etc/apache2/mods-available/cgid.conf to puppet with sum e8a2836392051bde889cf9c137058273
==> default: Notice: /Stage[main]/Apache::Mod::Cgid/File[cgid.conf]/content: content changed '{md5}e8a2836392051bde889cf9c137058273' to '{md5}7dffbb5823bcbb9ab4d3e67ab14d38a0'
==> default: Info: /Stage[main]/Apache::Mod::Cgid/File[cgid.conf]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Cgid/File[cgid.conf]: The container Class[Apache::Mod::Cgid] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Mod::Cgid/Apache::Mod[cgid]/File[cgid.conf symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Mod::Cgid/Apache::Mod[cgid]/File[cgid.conf symlink]/ensure: created
==> default: Info: /Stage[main]/Apache::Mod::Cgid/Apache::Mod[cgid]/File[cgid.conf symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Cgid/Apache::Mod[cgid]/File[cgid.conf symlink]: The container Apache::Mod[cgid] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Mod::Cgid/Apache::Mod[cgid]/File[cgid.load symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Mod::Cgid/Apache::Mod[cgid]/File[cgid.load symlink]/ensure: created
==> default: Info: /Stage[main]/Apache::Mod::Cgid/Apache::Mod[cgid]/File[cgid.load symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Cgid/Apache::Mod[cgid]/File[cgid.load symlink]: The container Apache::Mod[cgid] will propagate my refresh event
==> default: Debug: Apache::Mod[cgid]: The container Class[Apache::Mod::Cgid] will propagate my refresh event
==> default: Debug: Class[Apache::Mod::Cgid]: The container Stage[main] will propagate my refresh event
==> default: Debug: Exec[system-rvm](provider=posix): Executing '/usr/bin/curl -fsSL https://get.rvm.io | bash -s -- --version 1.25.33'
==> default: Debug: Executing '/usr/bin/curl -fsSL https://get.rvm.io | bash -s -- --version 1.25.33'
==> default: Notice: /Stage[main]/Rvm::System/Exec[system-rvm]/returns: executed successfully
==> default: Debug: /Stage[main]/Rvm::System/Exec[system-rvm]: The container Class[Rvm::System] will propagate my refresh event
==> default: Debug: Class[Rvm::System]: The container Stage[main] will propagate my refresh event
==> default: Debug: Executing '/usr/local/rvm/bin/rvm list strings'
==> default: Debug: Executing '/usr/local/rvm/bin/rvm install ruby-2.1.4 '
==> default: Debug: Executing '/usr/local/rvm/bin/rvm alias create default ruby-2.1.4'
==> default: Notice: /Stage[main]/Main/Rvm_system_ruby[ruby-2.1.4]/ensure: created
==> default: Debug: /Stage[main]/Main/Rvm_system_ruby[ruby-2.1.4]: The container Class[Main] will propagate my refresh event
==> default: Debug: Executing '/usr/local/rvm/bin/rvm ruby-2.1.4 do gem list --local bundler$'
==> default: Debug: Executing '/usr/local/rvm/bin/rvm ruby-2.1.4 do gem list --remote bundler$'
==> default: Debug: /Stage[main]/Main/Rvm_gem[ruby-2.1.4/bundler]/ensure: bundler ["1.7.4"] is installed, latest is "0.3.0"
==> default: Debug: Executing '/usr/local/rvm/bin/rvm ruby-2.1.4 do gem list --local bundler$'
==> default: Debug: Executing '/usr/local/rvm/bin/rvm ruby-2.1.4 do gem install --no-rdoc --no-ri bundler'
==> default: Notice: /Stage[main]/Main/Rvm_gem[ruby-2.1.4/bundler]/ensure: ensure changed '["1.7.4"]' to 'latest'
==> default: Debug: /Stage[main]/Main/Rvm_gem[ruby-2.1.4/bundler]: The container Class[Main] will propagate my refresh event
==> default: Debug: Executing '/usr/local/rvm/bin/rvm ruby-2.1.4 do gem list --local passenger$'
==> default: Debug: Executing '/usr/local/rvm/bin/rvm ruby-2.1.4 do gem install -v 4.0.53 --no-rdoc --no-ri passenger'
==> default: Debug: Executing '/usr/local/rvm/bin/rvm ruby-2.1.4 do gem list --local passenger$'
==> default: Notice: /Stage[main]/Rvm::Passenger::Gem/Rvm_gem[passenger]/ensure: created
==> default: Debug: /Stage[main]/Rvm::Passenger::Gem/Rvm_gem[passenger]: The container Class[Rvm::Passenger::Gem] will propagate my refresh event
==> default: Debug: Class[Rvm::Passenger::Gem]: The container Stage[main] will propagate my refresh event
==> default: Debug: Apache::Mod[filter]: The container Class[Apache::Default_mods] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[env]/File[env.load symlink]: Removing existing link for replacement with /etc/apache2/mods-available/env.load
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[env]/File[env.load symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Default_mods/Apache::Mod[env]/File[env.load symlink]/target: target changed '../mods-available/env.load' to '/etc/apache2/mods-available/env.load'
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[env]/File[env.load symlink]/mode: Not managing symlink mode
==> default: Info: /Stage[main]/Apache::Default_mods/Apache::Mod[env]/File[env.load symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[env]/File[env.load symlink]: The container Apache::Mod[env] will propagate my refresh event
==> default: Debug: Apache::Mod[env]: The container Class[Apache::Default_mods] will propagate my refresh event
==> default: Debug: Class[Rvm::Passenger::Dependencies::Ubuntu]: The container Stage[main] will propagate my refresh event
==> default: Debug: Exec[passenger-install-apache2-module](provider=posix): Executing '/usr/local/rvm/bin/rvm ruby-2.1.4 exec passenger-install-apache2-module -a'
==> default: Debug: Executing '/usr/local/rvm/bin/rvm ruby-2.1.4 exec passenger-install-apache2-module -a'
==> default: Notice: /Stage[main]/Rvm::Passenger::Apache/Exec[passenger-install-apache2-module]/returns: executed successfully
==> default: Debug: /Stage[main]/Rvm::Passenger::Apache/Exec[passenger-install-apache2-module]: The container Class[Rvm::Passenger::Apache] will propagate my refresh event
==> default: Info: /Stage[main]/Rvm::Passenger::Apache/Exec[passenger-install-apache2-module]: Scheduling refresh of Class[Apache::Mod::Passenger]
==> default: Info: Class[Apache::Mod::Passenger]: Scheduling refresh of Apache::Mod[passenger]
==> default: Debug: Executing '/usr/bin/dpkg-query -W --showformat '${Status} ${Package} ${Version}\n' libapache2-mod-passenger'
==> default: Debug: Executing '/usr/bin/apt-get -q -y -o DPkg::Options::=--force-confold install libapache2-mod-passenger'
==> default: Notice: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/Package[libapache2-mod-passenger]/ensure: ensure changed 'purged' to 'present'
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/Package[libapache2-mod-passenger]: The container Apache::Mod[passenger] will propagate my refresh event
==> default: Info: /Stage[main]/Apache::Mod::Passenger/File[passenger.conf]: Filebucketed /etc/apache2/mods-available/passenger.conf to puppet with sum 9b5d4ae8b65977488aa7958a2a16ea31
==> default: Notice: /Stage[main]/Apache::Mod::Passenger/File[passenger.conf]/content: content changed '{md5}9b5d4ae8b65977488aa7958a2a16ea31' to '{md5}1ae0a82a48765bbafd03602915ef8066'
==> default: Info: /Stage[main]/Apache::Mod::Passenger/File[passenger.conf]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/File[passenger.conf]: The container Class[Apache::Mod::Passenger] will propagate my refresh event
==> default: Info: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.load]: Filebucketed /etc/apache2/mods-available/passenger.load to puppet with sum 61421ba3247d368cfe99b540ad4ebc98
==> default: Notice: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.load]/content: content changed '{md5}61421ba3247d368cfe99b540ad4ebc98' to '{md5}fab81f3153de73ab9c92772e09cec27a'
==> default: Info: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.load]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.load]: The container Apache::Mod[passenger] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.load symlink]: Removing existing link for replacement with /etc/apache2/mods-available/passenger.load
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.load symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.load symlink]/target: target changed '../mods-available/passenger.load' to '/etc/apache2/mods-available/passenger.load'
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.load symlink]/mode: Not managing symlink mode
==> default: Info: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.load symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.load symlink]: The container Apache::Mod[passenger] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.conf symlink]: Removing existing link for replacement with /etc/apache2/mods-available/passenger.conf
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.conf symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.conf symlink]/target: target changed '../mods-available/passenger.conf' to '/etc/apache2/mods-available/passenger.conf'
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.conf symlink]/mode: Not managing symlink mode
==> default: Info: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.conf symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/Apache::Mod[passenger]/File[passenger.conf symlink]: The container Apache::Mod[passenger] will propagate my refresh event
==> default: Debug: Apache::Mod[passenger]: The container Class[Apache::Mod::Passenger] will propagate my refresh event
==> default: Info: /Stage[main]/Apache/File[/etc/apache2/sites-available/000-default.conf]: Filebucketed /etc/apache2/sites-available/000-default.conf to puppet with sum f3066f67070ab9b1ad9bab81ca05330a
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/sites-available/000-default.conf]: Removing existing file for replacement with absent
==> default: Notice: /Stage[main]/Apache/File[/etc/apache2/sites-available/000-default.conf]/ensure: removed
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/sites-available/000-default.conf]: The container /etc/apache2/sites-available will propagate my refresh event
==> default: Debug: /etc/apache2/sites-available: The container Class[Apache] will propagate my refresh event
==> default: Info: /etc/apache2/sites-available: Scheduling refresh of Class[Apache::Service]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat[15-default-ssl.conf]/File[/etc/apache2/sites-available/15-default-ssl.conf]: Nothing to manage: no ensure and the resource doesn't exist
==> default: Notice: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/File[15-default.conf]/ensure: defined content as '{md5}ec4e3755cc5cd891fd09126ba93f578e'
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/Concat[15-default.conf]/File[15-default.conf]: The container Concat[15-default.conf] will propagate my refresh event
==> default: Debug: Concat[15-default.conf]: The container Apache::Vhost[default] will propagate my refresh event
==> default: Info: Concat[15-default.conf]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/File[15-default.conf symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache/Apache::Vhost[default]/File[15-default.conf symlink]/ensure: created
==> default: Info: /Stage[main]/Apache/Apache::Vhost[default]/File[15-default.conf symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default]/File[15-default.conf symlink]: The container Apache::Vhost[default] will propagate my refresh event
==> default: Debug: Apache::Vhost[default]: The container Class[Apache] will propagate my refresh event
==> default: Debug: Apache::Mod[deflate]: The container Class[Apache::Mod::Deflate] will propagate my refresh event
==> default: Debug: Class[Apache::Mod::Deflate]: The container Stage[main] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/Concat[15-default-ssl.conf]/File[/var/lib/puppet/concat/15-default-ssl.conf/fragments.concat]: Nothing to manage: no ensure and the resource doesn't exist
==> default: Debug: /Stage[main]/Apache/Apache::Vhost[default-ssl]/File[15-default-ssl.conf symlink]: Nothing to manage: no ensure and the resource doesn't exist
==> default: Debug: Exec[rvm-system-user-vagrant](provider=posix): Executing check '/bin/cat /etc/group | grep '^rvm:' | grep -qw vagrant'
==> default: Debug: Executing '/bin/cat /etc/group | grep '^rvm:' | grep -qw vagrant'
==> default: Debug: Exec[rvm-system-user-vagrant](provider=posix): Executing '/usr/sbin/usermod -a -G rvm vagrant'
==> default: Debug: Executing '/usr/sbin/usermod -a -G rvm vagrant'
==> default: Notice: /Stage[main]/Main/Rvm::System_user[vagrant]/Exec[rvm-system-user-vagrant]/returns: executed successfully
==> default: Debug: /Stage[main]/Main/Rvm::System_user[vagrant]/Exec[rvm-system-user-vagrant]: The container Rvm::System_user[vagrant] will propagate my refresh event
==> default: Debug: Rvm::System_user[vagrant]: The container Class[Main] will propagate my refresh event
==> default: Debug: Class[Main]: The container Stage[main] will propagate my refresh event
==> default: Info: /Stage[main]/Apache::Mod::Dav_fs/File[dav_fs.conf]: Filebucketed /etc/apache2/mods-available/dav_fs.conf to puppet with sum 162db96239f13b5416f369b6306d9db6
==> default: Notice: /Stage[main]/Apache::Mod::Dav_fs/File[dav_fs.conf]/content: content changed '{md5}162db96239f13b5416f369b6306d9db6' to '{md5}e36e2951cff0d4df331652ca6fccdb77'
==> default: Info: /Stage[main]/Apache::Mod::Dav_fs/File[dav_fs.conf]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Dav_fs/File[dav_fs.conf]: The container Class[Apache::Mod::Dav_fs] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.conf symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.conf symlink]/ensure: created
==> default: Info: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.conf symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Mod::Dav_fs/Apache::Mod[dav_fs]/File[dav_fs.conf symlink]: The container Apache::Mod[dav_fs] will propagate my refresh event
==> default: Debug: Apache::Mod[dav_fs]: The container Class[Apache::Mod::Dav_fs] will propagate my refresh event
==> default: Debug: Class[Apache::Mod::Dav_fs]: The container Stage[main] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_user]/File[authz_user.load symlink]: Removing existing link for replacement with /etc/apache2/mods-available/authz_user.load
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_user]/File[authz_user.load symlink]/mode: Not managing symlink mode
==> default: Notice: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_user]/File[authz_user.load symlink]/target: target changed '../mods-available/authz_user.load' to '/etc/apache2/mods-available/authz_user.load'
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_user]/File[authz_user.load symlink]/mode: Not managing symlink mode
==> default: Info: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_user]/File[authz_user.load symlink]: Scheduling refresh of Service[httpd]
==> default: Debug: /Stage[main]/Apache::Default_mods/Apache::Mod[authz_user]/File[authz_user.load symlink]: The container Apache::Mod[authz_user] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/mods-enabled/mpm_event.conf]: Removing existing link for replacement with absent
==> default: Notice: /Stage[main]/Apache/File[/etc/apache2/mods-enabled/mpm_event.conf]/ensure: removed
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/mods-enabled/mpm_event.conf]: The container /etc/apache2/mods-enabled will propagate my refresh event
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/mods-enabled/status.load]: Removing existing link for replacement with absent
==> default: Notice: /Stage[main]/Apache/File[/etc/apache2/mods-enabled/status.load]/ensure: removed
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/mods-enabled/status.load]: The container /etc/apache2/mods-enabled will propagate my refresh event
==> default: Debug: Apache::Mod[authz_user]: The container Class[Apache::Default_mods] will propagate my refresh event
==> default: Debug: Class[Apache::Default_mods]: The container Stage[main] will propagate my refresh event
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/mods-enabled/status.conf]: Removing existing link for replacement with absent
==> default: Notice: /Stage[main]/Apache/File[/etc/apache2/mods-enabled/status.conf]/ensure: removed
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/mods-enabled/status.conf]: The container /etc/apache2/mods-enabled will propagate my refresh event
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/mods-enabled/mpm_event.load]: Removing existing link for replacement with absent
==> default: Notice: /Stage[main]/Apache/File[/etc/apache2/mods-enabled/mpm_event.load]/ensure: removed
==> default: Debug: /Stage[main]/Apache/File[/etc/apache2/mods-enabled/mpm_event.load]: The container /etc/apache2/mods-enabled will propagate my refresh event
==> default: Debug: /etc/apache2/mods-enabled: The container Class[Apache] will propagate my refresh event
==> default: Info: /etc/apache2/mods-enabled: Scheduling refresh of Class[Apache::Service]
==> default: Debug: /Stage[main]/Apache::Mod::Passenger/File[passenger_package.conf]: Nothing to manage: no ensure and the resource doesn't exist
==> default: Debug: Class[Apache::Mod::Passenger]: The container Stage[main] will propagate my refresh event
==> default: Debug: Exec[copy passenger_extra.conf to passenger.conf](provider=posix): Executing check '/usr/bin/diff /etc/apache2/mods-available/passenger_extra.conf /etc/apache2/mods-available/passenger.conf'
==> default: Debug: Executing '/usr/bin/diff /etc/apache2/mods-available/passenger_extra.conf /etc/apache2/mods-available/passenger.conf'
==> default: Debug: /Stage[main]/Rvm::Passenger::Apache/Exec[copy passenger_extra.conf to passenger.conf]/unless: /usr/bin/diff: /etc/apache2/mods-available/passenger_extra.conf: No such file or directory
==> default: Debug: Exec[copy passenger_extra.conf to passenger.conf](provider=posix): Executing '/bin/cp /etc/apache2/mods-available/passenger_extra.conf /etc/apache2/mods-available/passenger.conf'
==> default: Debug: Executing '/bin/cp /etc/apache2/mods-available/passenger_extra.conf /etc/apache2/mods-available/passenger.conf'
==> default: Notice: /Stage[main]/Rvm::Passenger::Apache/Exec[copy passenger_extra.conf to passenger.conf]/returns: /bin/cp: cannot stat ‘/etc/apache2/mods-available/passenger_extra.conf’: No such file or directory
==> default: Error: /bin/cp /etc/apache2/mods-available/passenger_extra.conf /etc/apache2/mods-available/passenger.conf returned 1 instead of one of [0]
==> default: Error: /Stage[main]/Rvm::Passenger::Apache/Exec[copy passenger_extra.conf to passenger.conf]/returns: change from notrun to 0 failed: /bin/cp /etc/apache2/mods-available/passenger_extra.conf /etc/apache2/mods-available/passenger.conf returned 1 instead of one of [0]
==> default: Debug: Class[Rvm::Passenger::Apache]: The container Stage[main] will propagate my refresh event
==> default: Info: Class[Apache::Service]: Scheduling refresh of Service[httpd]
==> default: Debug: Service[httpd](provider=upstart): Could not find apache2.conf in /etc/init
==> default: Debug: Service[httpd](provider=upstart): Could not find apache2.conf in /etc/init.d
==> default: Debug: Service[httpd](provider=upstart): Could not find apache2 in /etc/init
==> default: Debug: Executing '/etc/init.d/apache2 status'
==> default: Debug: Executing '/etc/init.d/apache2 status'
==> default: Debug: Executing '/etc/init.d/apache2 stop'
==> default: Debug: Executing '/etc/init.d/apache2 start'
==> default: Error: /Stage[main]/Apache::Service/Service[httpd]: Failed to call refresh: Could not start Service[httpd]: Execution of '/etc/init.d/apache2 start' returned 1: 
==> default: Error: /Stage[main]/Apache::Service/Service[httpd]: Could not start Service[httpd]: Execution of '/etc/init.d/apache2 start' returned 1: 
==> default: Debug: Class[Apache]: The container Stage[main] will propagate my refresh event
==> default: Debug: Finishing transaction 24275740
==> default: Debug: Storing state
==> default: Info: Creating state file /var/lib/puppet/state/state.yaml
==> default: Debug: Stored state in 0.02 seconds
==> default: Notice: Finished catalog run in 584.07 seconds
==> default: Debug: Executing '/etc/puppet/etckeeper-commit-post'
==> default: Debug: Using settings: adding file resource 'rrddir': 'File[/var/lib/puppet/rrd]{:path=>"/var/lib/puppet/rrd", :mode=>"750", :owner=>"puppet", :group=>"puppet", :ensure=>:directory, :loglevel=>:debug, :links=>:follow, :backup=>false}'
==> default: Debug: /File[/var/lib/puppet/rrd]/ensure: created
==> default: Debug: Finishing transaction 29102420
==> default: Debug: Received report to process from dev-box.localdomain
==> default: Debug: Processing report from dev-box.localdomain with processor Puppet::Reports::Store
